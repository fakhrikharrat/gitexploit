package com.soretrak.model.vo;

import com.soretrak.model.eo.DrdmdlocImpl;
import com.soretrak.model.vo.common.DrdmdlocViewRow;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 30 09:36:49 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DrdmdlocViewRowImpl extends ViewRowImpl implements DrdmdlocViewRow {

    public static final int ENTITY_DRDMDLOC = 0;
    public static final int ENTITY_DRCLIEN = 1;
    public static final int ENTITY_DRCATVE = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        LocId,
        Dectycl,
        Decclie,
        Delacli,
        Respon,
        Cin,
        Tel,
        Decatvh,
        Prixim,
        Prixkm,
        Idtyploc,
        Itineraire,
        Distance,
        Immo,
        DateDep,
        HeureDep,
        DateRet,
        HeureRet,
        MntTheo,
        MntLoc,
        Etat,
        Dectycl1,
        Decclie1,
        Typpay,
        Decexer,
        Denummv,
        Observ,
        Decatvh1,
        mnt,
        TripsplanView,
        DrclienView,
        DrcatveView,
        EtatLocView1,
        DrtypecView1,
        DrclienView1,
        DrcatveView1,
        DrtyplocView1,
        TypePayView1,
        DrmouvView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LOCID = AttributesEnum.LocId.index();
    public static final int DECTYCL = AttributesEnum.Dectycl.index();
    public static final int DECCLIE = AttributesEnum.Decclie.index();
    public static final int DELACLI = AttributesEnum.Delacli.index();
    public static final int RESPON = AttributesEnum.Respon.index();
    public static final int CIN = AttributesEnum.Cin.index();
    public static final int TEL = AttributesEnum.Tel.index();
    public static final int DECATVH = AttributesEnum.Decatvh.index();
    public static final int PRIXIM = AttributesEnum.Prixim.index();
    public static final int PRIXKM = AttributesEnum.Prixkm.index();
    public static final int IDTYPLOC = AttributesEnum.Idtyploc.index();
    public static final int ITINERAIRE = AttributesEnum.Itineraire.index();
    public static final int DISTANCE = AttributesEnum.Distance.index();
    public static final int IMMO = AttributesEnum.Immo.index();
    public static final int DATEDEP = AttributesEnum.DateDep.index();
    public static final int HEUREDEP = AttributesEnum.HeureDep.index();
    public static final int DATERET = AttributesEnum.DateRet.index();
    public static final int HEURERET = AttributesEnum.HeureRet.index();
    public static final int MNTTHEO = AttributesEnum.MntTheo.index();
    public static final int MNTLOC = AttributesEnum.MntLoc.index();
    public static final int ETAT = AttributesEnum.Etat.index();
    public static final int DECTYCL1 = AttributesEnum.Dectycl1.index();
    public static final int DECCLIE1 = AttributesEnum.Decclie1.index();
    public static final int TYPPAY = AttributesEnum.Typpay.index();
    public static final int DECEXER = AttributesEnum.Decexer.index();
    public static final int DENUMMV = AttributesEnum.Denummv.index();
    public static final int OBSERV = AttributesEnum.Observ.index();
    public static final int DECATVH1 = AttributesEnum.Decatvh1.index();
    public static final int MNT = AttributesEnum.mnt.index();
    public static final int TRIPSPLANVIEW = AttributesEnum.TripsplanView.index();
    public static final int DRCLIENVIEW = AttributesEnum.DrclienView.index();
    public static final int DRCATVEVIEW = AttributesEnum.DrcatveView.index();
    public static final int ETATLOCVIEW1 = AttributesEnum.EtatLocView1.index();
    public static final int DRTYPECVIEW1 = AttributesEnum.DrtypecView1.index();
    public static final int DRCLIENVIEW1 = AttributesEnum.DrclienView1.index();
    public static final int DRCATVEVIEW1 = AttributesEnum.DrcatveView1.index();
    public static final int DRTYPLOCVIEW1 = AttributesEnum.DrtyplocView1.index();
    public static final int TYPEPAYVIEW1 = AttributesEnum.TypePayView1.index();
    public static final int DRMOUVVIEW1 = AttributesEnum.DrmouvView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DrdmdlocViewRowImpl() {
    }

    /**
     * Gets Drdmdloc entity object.
     * @return the Drdmdloc
     */
    public DrdmdlocImpl getDrdmdloc() {
        return (DrdmdlocImpl) getEntity(ENTITY_DRDMDLOC);
    }

    /**
     * Gets Drclien entity object.
     * @return the Drclien
     */
    public EntityImpl getDrclien() {
        return (EntityImpl) getEntity(ENTITY_DRCLIEN);
    }


    /**
     * Gets Drcatve entity object.
     * @return the Drcatve
     */
    public EntityImpl getDrcatve() {
        return (EntityImpl) getEntity(ENTITY_DRCATVE);
    }

    /**
     * Gets the attribute value for LOC_ID using the alias name LocId.
     * @return the LOC_ID
     */
    public DBSequence getLocId() {
        return (DBSequence) getAttributeInternal(LOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_ID using the alias name LocId.
     * @param value value to set the LOC_ID
     */
    public void setLocId(DBSequence value) {
        setAttributeInternal(LOCID, value);
    }

    /**
     * Gets the attribute value for DECTYCL using the alias name Dectycl.
     * @return the DECTYCL
     */
    public Integer getDectycl() {
        return (Integer) getAttributeInternal(DECTYCL);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYCL using the alias name Dectycl.
     * @param value value to set the DECTYCL
     */
    public void setDectycl(Integer value) {
        setAttributeInternal(DECTYCL, value);
    }

    /**
     * Gets the attribute value for DECCLIE using the alias name Decclie.
     * @return the DECCLIE
     */
    public Long getDecclie() {
        return (Long) getAttributeInternal(DECCLIE);
    }

    /**
     * Sets <code>value</code> as attribute value for DECCLIE using the alias name Decclie.
     * @param value value to set the DECCLIE
     */
    public void setDecclie(Long value) {
        setAttributeInternal(DECCLIE, value);
    }

    /**
     * Gets the attribute value for DELACLI using the alias name Delacli.
     * @return the DELACLI
     */
    public String getDelacli() {
        return (String) getAttributeInternal(DELACLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DELACLI using the alias name Delacli.
     * @param value value to set the DELACLI
     */
    public void setDelacli(String value) {
        setAttributeInternal(DELACLI, value);
    }

    /**
     * Gets the attribute value for RESPON using the alias name Respon.
     * @return the RESPON
     */
    public String getRespon() {
        return (String) getAttributeInternal(RESPON);
    }

    /**
     * Sets <code>value</code> as attribute value for RESPON using the alias name Respon.
     * @param value value to set the RESPON
     */
    public void setRespon(String value) {
        setAttributeInternal(RESPON, value);
    }

    /**
     * Gets the attribute value for CIN using the alias name Cin.
     * @return the CIN
     */
    public String getCin() {
        return (String) getAttributeInternal(CIN);
    }

    /**
     * Sets <code>value</code> as attribute value for CIN using the alias name Cin.
     * @param value value to set the CIN
     */
    public void setCin(String value) {
        setAttributeInternal(CIN, value);
    }

    /**
     * Gets the attribute value for TEL using the alias name Tel.
     * @return the TEL
     */
    public String getTel() {
        return (String) getAttributeInternal(TEL);
    }

    /**
     * Sets <code>value</code> as attribute value for TEL using the alias name Tel.
     * @param value value to set the TEL
     */
    public void setTel(String value) {
        setAttributeInternal(TEL, value);
    }

    /**
     * Gets the attribute value for DECATVH using the alias name Decatvh.
     * @return the DECATVH
     */
    public String getDecatvh() {
        return (String) getAttributeInternal(DECATVH);
    }

    /**
     * Sets <code>value</code> as attribute value for DECATVH using the alias name Decatvh.
     * @param value value to set the DECATVH
     */
    public void setDecatvh(String value) {
        setAttributeInternal(DECATVH, value);
    }

    /**
     * Gets the attribute value for PRIXIM using the alias name Prixim.
     * @return the PRIXIM
     */
    public BigDecimal getPrixim() {
        return (BigDecimal) getAttributeInternal(PRIXIM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIXIM using the alias name Prixim.
     * @param value value to set the PRIXIM
     */
    public void setPrixim(BigDecimal value) {
        setAttributeInternal(PRIXIM, value);
    }

    /**
     * Gets the attribute value for PRIXKM using the alias name Prixkm.
     * @return the PRIXKM
     */
    public BigDecimal getPrixkm() {
        return (BigDecimal) getAttributeInternal(PRIXKM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIXKM using the alias name Prixkm.
     * @param value value to set the PRIXKM
     */
    public void setPrixkm(BigDecimal value) {
        setAttributeInternal(PRIXKM, value);
    }

    /**
     * Gets the attribute value for IDTYPLOC using the alias name Idtyploc.
     * @return the IDTYPLOC
     */
    public String getIdtyploc() {
        return (String) getAttributeInternal(IDTYPLOC);
    }

    /**
     * Sets <code>value</code> as attribute value for IDTYPLOC using the alias name Idtyploc.
     * @param value value to set the IDTYPLOC
     */
    public void setIdtyploc(String value) {
        setAttributeInternal(IDTYPLOC, value);
    }

    /**
     * Gets the attribute value for ITINERAIRE using the alias name Itineraire.
     * @return the ITINERAIRE
     */
    public String getItineraire() {
        return (String) getAttributeInternal(ITINERAIRE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITINERAIRE using the alias name Itineraire.
     * @param value value to set the ITINERAIRE
     */
    public void setItineraire(String value) {
        setAttributeInternal(ITINERAIRE, value);
    }

    /**
     * Gets the attribute value for DISTANCE using the alias name Distance.
     * @return the DISTANCE
     */
    public Integer getDistance() {
        return (Integer) getAttributeInternal(DISTANCE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTANCE using the alias name Distance.
     * @param value value to set the DISTANCE
     */
    public void setDistance(Integer value) {
        setAttributeInternal(DISTANCE, value);
    }

    /**
     * Gets the attribute value for IMMO using the alias name Immo.
     * @return the IMMO
     */
    public Integer getImmo() {
        return (Integer) getAttributeInternal(IMMO);
    }

    /**
     * Sets <code>value</code> as attribute value for IMMO using the alias name Immo.
     * @param value value to set the IMMO
     */
    public void setImmo(Integer value) {
        setAttributeInternal(IMMO, value);
    }

    /**
     * Gets the attribute value for DATE_DEP using the alias name DateDep.
     * @return the DATE_DEP
     */
    public Date getDateDep() {
        return (Date) getAttributeInternal(DATEDEP);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_DEP using the alias name DateDep.
     * @param value value to set the DATE_DEP
     */
    public void setDateDep(Date value) {
        setAttributeInternal(DATEDEP, value);
    }

    /**
     * Gets the attribute value for HEURE_DEP using the alias name HeureDep.
     * @return the HEURE_DEP
     */
    public Date getHeureDep() {
        return (Date) getAttributeInternal(HEUREDEP);
    }

    /**
     * Sets <code>value</code> as attribute value for HEURE_DEP using the alias name HeureDep.
     * @param value value to set the HEURE_DEP
     */
    public void setHeureDep(Date value) {
        setAttributeInternal(HEUREDEP, value);
    }

    /**
     * Gets the attribute value for DATE_RET using the alias name DateRet.
     * @return the DATE_RET
     */
    public Date getDateRet() {
        return (Date) getAttributeInternal(DATERET);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_RET using the alias name DateRet.
     * @param value value to set the DATE_RET
     */
    public void setDateRet(Date value) {
        setAttributeInternal(DATERET, value);
    }

    /**
     * Gets the attribute value for HEURE_RET using the alias name HeureRet.
     * @return the HEURE_RET
     */
    public Date getHeureRet() {
        return (Date) getAttributeInternal(HEURERET);
    }

    /**
     * Sets <code>value</code> as attribute value for HEURE_RET using the alias name HeureRet.
     * @param value value to set the HEURE_RET
     */
    public void setHeureRet(Date value) {
        setAttributeInternal(HEURERET, value);
    }

    /**
     * Gets the attribute value for MNT_THEO using the alias name MntTheo.
     * @return the MNT_THEO
     */
    public BigDecimal getMntTheo() {
        return (BigDecimal) getAttributeInternal(MNTTHEO);
    }

    /**
     * Sets <code>value</code> as attribute value for MNT_THEO using the alias name MntTheo.
     * @param value value to set the MNT_THEO
     */
    public void setMntTheo(BigDecimal value) {
        setAttributeInternal(MNTTHEO, value);
    }

    /**
     * Gets the attribute value for MNT_LOC using the alias name MntLoc.
     * @return the MNT_LOC
     */
    public BigDecimal getMntLoc() {
        return (BigDecimal) getAttributeInternal(MNTLOC);
    }

    /**
     * Sets <code>value</code> as attribute value for MNT_LOC using the alias name MntLoc.
     * @param value value to set the MNT_LOC
     */
    public void setMntLoc(BigDecimal value) {
        setAttributeInternal(MNTLOC, value);
    }

    /**
     * Gets the attribute value for ETAT using the alias name Etat.
     * @return the ETAT
     */
    public String getEtat() {
        return (String) getAttributeInternal(ETAT);
    }

    /**
     * Sets <code>value</code> as attribute value for ETAT using the alias name Etat.
     * @param value value to set the ETAT
     */
    public void setEtat(String value) {
        setAttributeInternal(ETAT, value);
    }

    /**
     * Gets the attribute value for DECTYCL using the alias name Dectycl1.
     * @return the DECTYCL
     */
    public Integer getDectycl1() {
        return (Integer) getAttributeInternal(DECTYCL1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYCL using the alias name Dectycl1.
     * @param value value to set the DECTYCL
     */
    public void setDectycl1(Integer value) {
        setAttributeInternal(DECTYCL1, value);
    }

    /**
     * Gets the attribute value for DECCLIE using the alias name Decclie1.
     * @return the DECCLIE
     */
    public Long getDecclie1() {
        return (Long) getAttributeInternal(DECCLIE1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECCLIE using the alias name Decclie1.
     * @param value value to set the DECCLIE
     */
    public void setDecclie1(Long value) {
        setAttributeInternal(DECCLIE1, value);
    }

    /**
     * Gets the attribute value for TYPPAY using the alias name Typpay.
     * @return the TYPPAY
     */
    public String getTyppay() {
        return (String) getAttributeInternal(TYPPAY);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPPAY using the alias name Typpay.
     * @param value value to set the TYPPAY
     */
    public void setTyppay(String value) {
        setAttributeInternal(TYPPAY, value);
    }

    /**
     * Gets the attribute value for DECEXER using the alias name Decexer.
     * @return the DECEXER
     */
    public Integer getDecexer() {
        return (Integer) getAttributeInternal(DECEXER);
    }

    /**
     * Sets <code>value</code> as attribute value for DECEXER using the alias name Decexer.
     * @param value value to set the DECEXER
     */
    public void setDecexer(Integer value) {
        setAttributeInternal(DECEXER, value);
    }

    /**
     * Gets the attribute value for DENUMMV using the alias name Denummv.
     * @return the DENUMMV
     */
    public Integer getDenummv() {
        return (Integer) getAttributeInternal(DENUMMV);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMMV using the alias name Denummv.
     * @param value value to set the DENUMMV
     */
    public void setDenummv(Integer value) {
        setAttributeInternal(DENUMMV, value);
    }

    /**
     * Gets the attribute value for OBSERV using the alias name Observ.
     * @return the OBSERV
     */
    public String getObserv() {
        return (String) getAttributeInternal(OBSERV);
    }

    /**
     * Sets <code>value</code> as attribute value for OBSERV using the alias name Observ.
     * @param value value to set the OBSERV
     */
    public void setObserv(String value) {
        setAttributeInternal(OBSERV, value);
    }

    /**
     * Gets the attribute value for DECATVH using the alias name Decatvh1.
     * @return the DECATVH
     */
    public String getDecatvh1() {
        return (String) getAttributeInternal(DECATVH1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECATVH using the alias name Decatvh1.
     * @param value value to set the DECATVH
     */
    public void setDecatvh1(String value) {
        setAttributeInternal(DECATVH1, value);
    }


    /**
     * Gets the attribute value for the calculated attribute mnt.
     * @return the mnt
     */
    public BigDecimal getmnt() {
        return (BigDecimal) getAttributeInternal(MNT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TripsplanView.
     */
    public RowIterator getTripsplanView() {
        return (RowIterator) getAttributeInternal(TRIPSPLANVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DrclienView.
     */
    public Row getDrclienView() {
        return (Row) getAttributeInternal(DRCLIENVIEW);
    }

    /**
     * Sets the master-detail link DrclienView between this object and <code>value</code>.
     */
    public void setDrclienView(Row value) {
        setAttributeInternal(DRCLIENVIEW, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link DrcatveView.
     */
    public Row getDrcatveView() {
        return (Row) getAttributeInternal(DRCATVEVIEW);
    }

    /**
     * Sets the master-detail link DrcatveView between this object and <code>value</code>.
     */
    public void setDrcatveView(Row value) {
        setAttributeInternal(DRCATVEVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EtatLocView1.
     */
    public RowSet getEtatLocView1() {
        return (RowSet) getAttributeInternal(ETATLOCVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrtypecView1.
     */
    public RowSet getDrtypecView1() {
        return (RowSet) getAttributeInternal(DRTYPECVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrclienView1.
     */
    public RowSet getDrclienView1() {
        return (RowSet) getAttributeInternal(DRCLIENVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrcatveView1.
     */
    public RowSet getDrcatveView1() {
        return (RowSet) getAttributeInternal(DRCATVEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrtyplocView1.
     */
    public RowSet getDrtyplocView1() {
        return (RowSet) getAttributeInternal(DRTYPLOCVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TypePayView1.
     */
    public RowSet getTypePayView1() {
        return (RowSet) getAttributeInternal(TYPEPAYVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrmouvView1.
     */
    public RowSet getDrmouvView1() {
        return (RowSet) getAttributeInternal(DRMOUVVIEW1);
    }
    
    public void updateEtatLocation(String value){
        
        this.setEtat(value);
        doSave();
    }
    public void updateMntTheoLoc(){
        this.setMntTheo(this.getmnt());
        
    }
    public void doSave() {
        try {
            getDBTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

