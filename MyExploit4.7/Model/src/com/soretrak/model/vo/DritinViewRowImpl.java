package com.soretrak.model.vo;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 24 09:07:10 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DritinViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_DRITIN = 0;
    public static final int ENTITY_DRSTATI = 1;
    public static final int ENTITY_DRLIGNE = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Denumli,
        Denomla,
        Denumlg,
        Decstat,
        Delstat,
        Delstaa,
        Dekmsta,
        Dedurtr,
        Deescale,
        Desecti,
        Decsect,
        Dedates,
        Detarif,
        Decstat1,
        Dectyst,
        Denumli1,
        StopLon,
        StopLat,
        aller,
        Retour,
        Dista,
        Distr,
        DrstatiView,
        PlanContView,
        DrstatiView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DENUMLI = AttributesEnum.Denumli.index();
    public static final int DENOMLA = AttributesEnum.Denomla.index();
    public static final int DENUMLG = AttributesEnum.Denumlg.index();
    public static final int DECSTAT = AttributesEnum.Decstat.index();
    public static final int DELSTAT = AttributesEnum.Delstat.index();
    public static final int DELSTAA = AttributesEnum.Delstaa.index();
    public static final int DEKMSTA = AttributesEnum.Dekmsta.index();
    public static final int DEDURTR = AttributesEnum.Dedurtr.index();
    public static final int DEESCALE = AttributesEnum.Deescale.index();
    public static final int DESECTI = AttributesEnum.Desecti.index();
    public static final int DECSECT = AttributesEnum.Decsect.index();
    public static final int DEDATES = AttributesEnum.Dedates.index();
    public static final int DETARIF = AttributesEnum.Detarif.index();
    public static final int DECSTAT1 = AttributesEnum.Decstat1.index();
    public static final int DECTYST = AttributesEnum.Dectyst.index();
    public static final int DENUMLI1 = AttributesEnum.Denumli1.index();
    public static final int STOPLON = AttributesEnum.StopLon.index();
    public static final int STOPLAT = AttributesEnum.StopLat.index();
    public static final int ALLER = AttributesEnum.aller.index();
    public static final int RETOUR = AttributesEnum.Retour.index();
    public static final int DISTA = AttributesEnum.Dista.index();
    public static final int DISTR = AttributesEnum.Distr.index();
    public static final int DRSTATIVIEW = AttributesEnum.DrstatiView.index();
    public static final int PLANCONTVIEW = AttributesEnum.PlanContView.index();
    public static final int DRSTATIVIEW1 = AttributesEnum.DrstatiView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DritinViewRowImpl() {
    }

    /**
     * Gets Dritin entity object.
     * @return the Dritin
     */
    public EntityImpl getDritin() {
        return (EntityImpl) getEntity(ENTITY_DRITIN);
    }

    /**
     * Gets Drstati entity object.
     * @return the Drstati
     */
    public EntityImpl getDrstati() {
        return (EntityImpl) getEntity(ENTITY_DRSTATI);
    }

    /**
     * Gets Drligne entity object.
     * @return the Drligne
     */
    public EntityImpl getDrligne() {
        return (EntityImpl) getEntity(ENTITY_DRLIGNE);
    }

    /**
     * Gets the attribute value for DENUMLI using the alias name Denumli.
     * @return the DENUMLI
     */
    public String getDenumli() {
        return (String) getAttributeInternal(DENUMLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMLI using the alias name Denumli.
     * @param value value to set the DENUMLI
     */
    public void setDenumli(String value) {
        setAttributeInternal(DENUMLI, value);
    }

    /**
     * Gets the attribute value for DENOMLA using the alias name Denomla.
     * @return the DENOMLA
     */
    public String getDenomla() {
        return (String) getAttributeInternal(DENOMLA);
    }

    /**
     * Sets <code>value</code> as attribute value for DENOMLA using the alias name Denomla.
     * @param value value to set the DENOMLA
     */
    public void setDenomla(String value) {
        setAttributeInternal(DENOMLA, value);
    }

    /**
     * Gets the attribute value for DENUMLG using the alias name Denumlg.
     * @return the DENUMLG
     */
    public String getDenumlg() {
        return (String) getAttributeInternal(DENUMLG);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMLG using the alias name Denumlg.
     * @param value value to set the DENUMLG
     */
    public void setDenumlg(String value) {
        setAttributeInternal(DENUMLG, value);
    }

    /**
     * Gets the attribute value for DECSTAT using the alias name Decstat.
     * @return the DECSTAT
     */
    public String getDecstat() {
        return (String) getAttributeInternal(DECSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for DECSTAT using the alias name Decstat.
     * @param value value to set the DECSTAT
     */
    public void setDecstat(String value) {
        setAttributeInternal(DECSTAT, value);
    }

    /**
     * Gets the attribute value for DELSTAT using the alias name Delstat.
     * @return the DELSTAT
     */
    public String getDelstat() {
        return (String) getAttributeInternal(DELSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for DELSTAT using the alias name Delstat.
     * @param value value to set the DELSTAT
     */
    public void setDelstat(String value) {
        setAttributeInternal(DELSTAT, value);
    }

    /**
     * Gets the attribute value for DELSTAA using the alias name Delstaa.
     * @return the DELSTAA
     */
    public String getDelstaa() {
        return (String) getAttributeInternal(DELSTAA);
    }

    /**
     * Sets <code>value</code> as attribute value for DELSTAA using the alias name Delstaa.
     * @param value value to set the DELSTAA
     */
    public void setDelstaa(String value) {
        setAttributeInternal(DELSTAA, value);
    }

    /**
     * Gets the attribute value for DEKMSTA using the alias name Dekmsta.
     * @return the DEKMSTA
     */
    public BigDecimal getDekmsta() {
        return (BigDecimal) getAttributeInternal(DEKMSTA);
    }

    /**
     * Sets <code>value</code> as attribute value for DEKMSTA using the alias name Dekmsta.
     * @param value value to set the DEKMSTA
     */
    public void setDekmsta(BigDecimal value) {
        setAttributeInternal(DEKMSTA, value);
    }

    /**
     * Gets the attribute value for DEDURTR using the alias name Dedurtr.
     * @return the DEDURTR
     */
    public Integer getDedurtr() {
        return (Integer) getAttributeInternal(DEDURTR);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDURTR using the alias name Dedurtr.
     * @param value value to set the DEDURTR
     */
    public void setDedurtr(Integer value) {
        setAttributeInternal(DEDURTR, value);
    }

    /**
     * Gets the attribute value for DEESCALE using the alias name Deescale.
     * @return the DEESCALE
     */
    public Integer getDeescale() {
        return (Integer) getAttributeInternal(DEESCALE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEESCALE using the alias name Deescale.
     * @param value value to set the DEESCALE
     */
    public void setDeescale(Integer value) {
        setAttributeInternal(DEESCALE, value);
    }

    /**
     * Gets the attribute value for DESECTI using the alias name Desecti.
     * @return the DESECTI
     */
    public String getDesecti() {
        return (String) getAttributeInternal(DESECTI);
    }

    /**
     * Sets <code>value</code> as attribute value for DESECTI using the alias name Desecti.
     * @param value value to set the DESECTI
     */
    public void setDesecti(String value) {
        setAttributeInternal(DESECTI, value);
    }

    /**
     * Gets the attribute value for DECSECT using the alias name Decsect.
     * @return the DECSECT
     */
    public Integer getDecsect() {
        return (Integer) getAttributeInternal(DECSECT);
    }

    /**
     * Sets <code>value</code> as attribute value for DECSECT using the alias name Decsect.
     * @param value value to set the DECSECT
     */
    public void setDecsect(Integer value) {
        setAttributeInternal(DECSECT, value);
    }

    /**
     * Gets the attribute value for DEDATES using the alias name Dedates.
     * @return the DEDATES
     */
    public Timestamp getDedates() {
        return (Timestamp) getAttributeInternal(DEDATES);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDATES using the alias name Dedates.
     * @param value value to set the DEDATES
     */
    public void setDedates(Timestamp value) {
        setAttributeInternal(DEDATES, value);
    }

    /**
     * Gets the attribute value for DETARIF using the alias name Detarif.
     * @return the DETARIF
     */
    public Long getDetarif() {
        return (Long) getAttributeInternal(DETARIF);
    }

    /**
     * Sets <code>value</code> as attribute value for DETARIF using the alias name Detarif.
     * @param value value to set the DETARIF
     */
    public void setDetarif(Long value) {
        setAttributeInternal(DETARIF, value);
    }

    /**
     * Gets the attribute value for DECSTAT using the alias name Decstat1.
     * @return the DECSTAT
     */
    public String getDecstat1() {
        return (String) getAttributeInternal(DECSTAT1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECSTAT using the alias name Decstat1.
     * @param value value to set the DECSTAT
     */
    public void setDecstat1(String value) {
        setAttributeInternal(DECSTAT1, value);
    }

    /**
     * Gets the attribute value for DECTYST using the alias name Dectyst.
     * @return the DECTYST
     */
    public String getDectyst() {
        return (String) getAttributeInternal(DECTYST);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYST using the alias name Dectyst.
     * @param value value to set the DECTYST
     */
    public void setDectyst(String value) {
        setAttributeInternal(DECTYST, value);
    }

    /**
     * Gets the attribute value for DENUMLI using the alias name Denumli1.
     * @return the DENUMLI
     */
    public String getDenumli1() {
        return (String) getAttributeInternal(DENUMLI1);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMLI using the alias name Denumli1.
     * @param value value to set the DENUMLI
     */
    public void setDenumli1(String value) {
        setAttributeInternal(DENUMLI1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StopLon.
     * @return the StopLon
     */
    public Number getStopLon() {
        return (Number) getAttributeInternal(STOPLON);
    }

    /**
     * Gets the attribute value for the calculated attribute StopLat.
     * @return the StopLat
     */
    public Number getStopLat() {
        return (Number) getAttributeInternal(STOPLAT);
    }

    /**
     * Gets the attribute value for the calculated attribute aller.
     * @return the aller
     */
    public Integer getaller() {
        return (Integer) getAttributeInternal(ALLER);
    }

    /**
     * Gets the attribute value for the calculated attribute Retour.
     * @return the Retour
     */
    public Integer getRetour() {
        return (Integer) getAttributeInternal(RETOUR);
    }

    /**
     * Gets the attribute value for the calculated attribute Dista.
     * @return the Dista
     */
    public Integer getDista() {
        return (Integer) getAttributeInternal(DISTA);
    }

    /**
     * Gets the attribute value for the calculated attribute Distr.
     * @return the Distr
     */
    public Integer getDistr() {
        return (Integer) getAttributeInternal(DISTR);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link DrstatiView.
     */
    public Row getDrstatiView() {
        return (Row) getAttributeInternal(DRSTATIVIEW);
    }

    /**
     * Sets the master-detail link DrstatiView between this object and <code>value</code>.
     */
    public void setDrstatiView(Row value) {
        setAttributeInternal(DRSTATIVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link PlanContView.
     */
    public Row getPlanContView() {
        return (Row) getAttributeInternal(PLANCONTVIEW);
    }

    /**
     * Sets the master-detail link PlanContView between this object and <code>value</code>.
     */
    public void setPlanContView(Row value) {
        setAttributeInternal(PLANCONTVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrstatiView1.
     */
    public RowSet getDrstatiView1() {
        return (RowSet) getAttributeInternal(DRSTATIVIEW1);
    }
}

