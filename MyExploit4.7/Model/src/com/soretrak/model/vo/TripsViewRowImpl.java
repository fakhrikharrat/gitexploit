package com.soretrak.model.vo;

import com.soretrak.model.eo.GroupExpImpl;
import com.soretrak.model.eo.StopTimesImpl;
import com.soretrak.model.eo.TripsImpl;
import com.soretrak.model.vo.common.TripsViewRow;

import java.sql.SQLException;
import java.sql.Timestamp;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import java.util.List;


import oracle.igf.ids.config.AttributeDef;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
//import oracle.jbo.domain.Timestamp;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 24 08:45:54 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TripsViewRowImpl extends ViewRowImpl implements TripsViewRow {


    public static final int ENTITY_TRIPS = 0;
    public static final int ENTITY_CALENDAR = 1;
    public static final int ENTITY_GROUPEXP = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TripId,
        Denumli,
        ServiceId,
        DirectionId,
        TimeDepart,
        TimeReturn,
        TripHeadsign,
        TripShortName,
        BlockId,
        Monday,
        Tuesday,
        Thursday,
        Wednesday,
        Friday,
        Saturday,
        Sunday,
        StartDate,
        EndDate,
        ServiceId1,
        Num,
        Deccent,
        Num1,
        nbre,
        tripsamp,
        nbreaffect,
        Haveret,
        TimeNret,
        TripNid,
        dyntime,
        TimeArrival,
        DrligneView,
        StopTimesView,
        CalendarView,
        GroupExpView,
        TripsplanView,
        DirecView1,
        CalendarView1,
        GroupExpView1,
        DrligneView1,
        YesOrNoView1,
        TripsView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRIPID = AttributesEnum.TripId.index();
    public static final int DENUMLI = AttributesEnum.Denumli.index();
    public static final int SERVICEID = AttributesEnum.ServiceId.index();
    public static final int DIRECTIONID = AttributesEnum.DirectionId.index();
    public static final int TIMEDEPART = AttributesEnum.TimeDepart.index();
    public static final int TIMERETURN = AttributesEnum.TimeReturn.index();
    public static final int TRIPHEADSIGN = AttributesEnum.TripHeadsign.index();
    public static final int TRIPSHORTNAME = AttributesEnum.TripShortName.index();
    public static final int BLOCKID = AttributesEnum.BlockId.index();
    public static final int MONDAY = AttributesEnum.Monday.index();
    public static final int TUESDAY = AttributesEnum.Tuesday.index();
    public static final int THURSDAY = AttributesEnum.Thursday.index();
    public static final int WEDNESDAY = AttributesEnum.Wednesday.index();
    public static final int FRIDAY = AttributesEnum.Friday.index();
    public static final int SATURDAY = AttributesEnum.Saturday.index();
    public static final int SUNDAY = AttributesEnum.Sunday.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int SERVICEID1 = AttributesEnum.ServiceId1.index();
    public static final int NUM = AttributesEnum.Num.index();
    public static final int DECCENT = AttributesEnum.Deccent.index();
    public static final int NUM1 = AttributesEnum.Num1.index();
    public static final int NBRE = AttributesEnum.nbre.index();
    public static final int TRIPSAMP = AttributesEnum.tripsamp.index();
    public static final int NBREAFFECT = AttributesEnum.nbreaffect.index();
    public static final int HAVERET = AttributesEnum.Haveret.index();
    public static final int TIMENRET = AttributesEnum.TimeNret.index();
    public static final int TRIPNID = AttributesEnum.TripNid.index();
    public static final int DYNTIME = AttributesEnum.dyntime.index();
    public static final int TIMEARRIVAL = AttributesEnum.TimeArrival.index();
    public static final int DRLIGNEVIEW = AttributesEnum.DrligneView.index();
    public static final int STOPTIMESVIEW = AttributesEnum.StopTimesView.index();
    public static final int CALENDARVIEW = AttributesEnum.CalendarView.index();
    public static final int GROUPEXPVIEW = AttributesEnum.GroupExpView.index();
    public static final int TRIPSPLANVIEW = AttributesEnum.TripsplanView.index();
    public static final int DIRECVIEW1 = AttributesEnum.DirecView1.index();
    public static final int CALENDARVIEW1 = AttributesEnum.CalendarView1.index();
    public static final int GROUPEXPVIEW1 = AttributesEnum.GroupExpView1.index();
    public static final int DRLIGNEVIEW1 = AttributesEnum.DrligneView1.index();
    public static final int YESORNOVIEW1 = AttributesEnum.YesOrNoView1.index();
    public static final int TRIPSVIEW1 = AttributesEnum.TripsView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TripsViewRowImpl() {
    }

    /**
     * Gets Trips entity object.
     * @return the Trips
     */
    public TripsImpl getTrips() {
        return (TripsImpl) getEntity(ENTITY_TRIPS);
    }

    /**
     * Gets Calendar entity object.
     * @return the Calendar
     */
    public EntityImpl getCalendar() {
        return (EntityImpl) getEntity(ENTITY_CALENDAR);
    }


    /**
     * Gets GroupExp entity object.
     * @return the GroupExp
     */
    public GroupExpImpl getGroupExp() {
        return (GroupExpImpl) getEntity(ENTITY_GROUPEXP);
    }


    /**
     * Gets the attribute value for TRIP_ID using the alias name TripId.
     * @return the TRIP_ID
     */
    public DBSequence getTripId() {
        return (DBSequence) getAttributeInternal(TRIPID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRIP_ID using the alias name TripId.
     * @param value value to set the TRIP_ID
     */
    public void setTripId(DBSequence value) {
        setAttributeInternal(TRIPID, value);
    }

    /**
     * Gets the attribute value for DENUMLI using the alias name Denumli.
     * @return the DENUMLI
     */
    public String getDenumli() {
        return (String) getAttributeInternal(DENUMLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMLI using the alias name Denumli.
     * @param value value to set the DENUMLI
     */
    public void setDenumli(String value) {
        setAttributeInternal(DENUMLI, value);
    }

    /**
     * Gets the attribute value for SERVICE_ID using the alias name ServiceId.
     * @return the SERVICE_ID
     */
    public Integer getServiceId() {
        return (Integer) getAttributeInternal(SERVICEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SERVICE_ID using the alias name ServiceId.
     * @param value value to set the SERVICE_ID
     */
    public void setServiceId(Integer value) {
        setAttributeInternal(SERVICEID, value);
    }

    /**
     * Gets the attribute value for DIRECTION_ID using the alias name DirectionId.
     * @return the DIRECTION_ID
     */
    public String getDirectionId() {
        return (String) getAttributeInternal(DIRECTIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for DIRECTION_ID using the alias name DirectionId.
     * @param value value to set the DIRECTION_ID
     */
    public void setDirectionId(String value) {
        setAttributeInternal(DIRECTIONID, value);
    }

    /**
     * Gets the attribute value for TIME_DEPART using the alias name TimeDepart.
     * @return the TIME_DEPART
     */
    public Timestamp getTimeDepart() {
        return (Timestamp) getAttributeInternal(TIMEDEPART);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME_DEPART using the alias name TimeDepart.
     * @param value value to set the TIME_DEPART
     */
    public void setTimeDepart(Timestamp value) {
        setAttributeInternal(TIMEDEPART, value);
    }


    /**
     * Gets the attribute value for TIME_RETURN using the alias name TimeReturn.
     * @return the TIME_RETURN
     */
    public Timestamp getTimeReturn() {
        return (Timestamp) getAttributeInternal(TIMERETURN);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME_RETURN using the alias name TimeReturn.
     * @param value value to set the TIME_RETURN
     */
    public void setTimeReturn(Timestamp value) {
        setAttributeInternal(TIMERETURN, value);
    }

    /**
     * Gets the attribute value for TRIP_HEADSIGN using the alias name TripHeadsign.
     * @return the TRIP_HEADSIGN
     */
    public String getTripHeadsign() {
        return (String) getAttributeInternal(TRIPHEADSIGN);
    }

    /**
     * Sets <code>value</code> as attribute value for TRIP_HEADSIGN using the alias name TripHeadsign.
     * @param value value to set the TRIP_HEADSIGN
     */
    public void setTripHeadsign(String value) {
        setAttributeInternal(TRIPHEADSIGN, value);
    }

    /**
     * Gets the attribute value for TRIP_SHORT_NAME using the alias name TripShortName.
     * @return the TRIP_SHORT_NAME
     */
    public String getTripShortName() {
        return (String) getAttributeInternal(TRIPSHORTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TRIP_SHORT_NAME using the alias name TripShortName.
     * @param value value to set the TRIP_SHORT_NAME
     */
    public void setTripShortName(String value) {
        setAttributeInternal(TRIPSHORTNAME, value);
    }

    /**
     * Gets the attribute value for BLOCK_ID using the alias name BlockId.
     * @return the BLOCK_ID
     */
    public Integer getBlockId() {
        return (Integer) getAttributeInternal(BLOCKID);
    }

    /**
     * Sets <code>value</code> as attribute value for BLOCK_ID using the alias name BlockId.
     * @param value value to set the BLOCK_ID
     */
    public void setBlockId(Integer value) {
        setAttributeInternal(BLOCKID, value);
    }

    /**
     * Gets the attribute value for MONDAY using the alias name Monday.
     * @return the MONDAY
     */
    public String getMonday() {
        return (String) getAttributeInternal(MONDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for MONDAY using the alias name Monday.
     * @param value value to set the MONDAY
     */
    public void setMonday(String value) {
        setAttributeInternal(MONDAY, value);
    }

    /**
     * Gets the attribute value for TUESDAY using the alias name Tuesday.
     * @return the TUESDAY
     */
    public String getTuesday() {
        return (String) getAttributeInternal(TUESDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for TUESDAY using the alias name Tuesday.
     * @param value value to set the TUESDAY
     */
    public void setTuesday(String value) {
        setAttributeInternal(TUESDAY, value);
    }

    /**
     * Gets the attribute value for THURSDAY using the alias name Thursday.
     * @return the THURSDAY
     */
    public String getThursday() {
        return (String) getAttributeInternal(THURSDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for THURSDAY using the alias name Thursday.
     * @param value value to set the THURSDAY
     */
    public void setThursday(String value) {
        setAttributeInternal(THURSDAY, value);
    }

    /**
     * Gets the attribute value for WEDNESDAY using the alias name Wednesday.
     * @return the WEDNESDAY
     */
    public String getWednesday() {
        return (String) getAttributeInternal(WEDNESDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for WEDNESDAY using the alias name Wednesday.
     * @param value value to set the WEDNESDAY
     */
    public void setWednesday(String value) {
        setAttributeInternal(WEDNESDAY, value);
    }

    /**
     * Gets the attribute value for FRIDAY using the alias name Friday.
     * @return the FRIDAY
     */
    public String getFriday() {
        return (String) getAttributeInternal(FRIDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for FRIDAY using the alias name Friday.
     * @param value value to set the FRIDAY
     */
    public void setFriday(String value) {
        setAttributeInternal(FRIDAY, value);
    }

    /**
     * Gets the attribute value for SATURDAY using the alias name Saturday.
     * @return the SATURDAY
     */
    public String getSaturday() {
        return (String) getAttributeInternal(SATURDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for SATURDAY using the alias name Saturday.
     * @param value value to set the SATURDAY
     */
    public void setSaturday(String value) {
        setAttributeInternal(SATURDAY, value);
    }

    /**
     * Gets the attribute value for SUNDAY using the alias name Sunday.
     * @return the SUNDAY
     */
    public String getSunday() {
        return (String) getAttributeInternal(SUNDAY);
    }

    /**
     * Sets <code>value</code> as attribute value for SUNDAY using the alias name Sunday.
     * @param value value to set the SUNDAY
     */
    public void setSunday(String value) {
        setAttributeInternal(SUNDAY, value);
    }

    /**
     * Gets the attribute value for START_DATE using the alias name StartDate.
     * @return the START_DATE
     */
    public Timestamp getStartDate() {
        return (Timestamp) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for START_DATE using the alias name StartDate.
     * @param value value to set the START_DATE
     */
    public void setStartDate(Timestamp value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for END_DATE using the alias name EndDate.
     * @return the END_DATE
     */
    public Timestamp getEndDate() {
        return (Timestamp) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DATE using the alias name EndDate.
     * @param value value to set the END_DATE
     */
    public void setEndDate(Timestamp value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for SERVICE_ID using the alias name ServiceId1.
     * @return the SERVICE_ID
     */
    public Integer getServiceId1() {
        return (Integer) getAttributeInternal(SERVICEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for SERVICE_ID using the alias name ServiceId1.
     * @param value value to set the SERVICE_ID
     */
    public void setServiceId1(Integer value) {
        setAttributeInternal(SERVICEID1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute nbre.
     * @return the nbre
     */
    public Number getnbre() {
        return (Number) getAttributeInternal(NBRE);
    }


    /**
     * Gets the attribute value for the calculated attribute tripsamp.
     * @return the tripsamp
     */
    public Float gettripsamp() {
        return (Float) getAttributeInternal(TRIPSAMP);
    }

    /**
     * Gets the attribute value for the calculated attribute nbreaffect.
     * @return the nbreaffect
     */
    public Integer getnbreaffect() {
        return (Integer) getAttributeInternal(NBREAFFECT);
    }


    /**
     * Gets the attribute value for HAVERET using the alias name Haveret.
     * @return the HAVERET
     */
    public String getHaveret() {
        return (String) getAttributeInternal(HAVERET);
    }

    /**
     * Sets <code>value</code> as attribute value for HAVERET using the alias name Haveret.
     * @param value value to set the HAVERET
     */
    public void setHaveret(String value) {
        setAttributeInternal(HAVERET, value);
    }

    /**
     * Gets the attribute value for TIME_NRET using the alias name TimeNret.
     * @return the TIME_NRET
     */
    public Timestamp getTimeNret() {
        return (Timestamp) getAttributeInternal(TIMENRET);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME_NRET using the alias name TimeNret.
     * @param value value to set the TIME_NRET
     */
    public void setTimeNret(Timestamp value) {
        setAttributeInternal(TIMENRET, value);
    }

    /**
     * Gets the attribute value for TRIP_NID using the alias name TripNid.
     * @return the TRIP_NID
     */
    public Integer getTripNid() {
        return (Integer) getAttributeInternal(TRIPNID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRIP_NID using the alias name TripNid.
     * @param value value to set the TRIP_NID
     */
    public void setTripNid(Integer value) {
        setAttributeInternal(TRIPNID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dyntime.
     * @return the dyntime
     */
    public Timestamp getdyntime() {
        return (Timestamp) getAttributeInternal(DYNTIME);
    }

    /**
     * Gets the attribute value for TIME_ARRIVAL using the alias name TimeArrival.
     * @return the TIME_ARRIVAL
     */
    public Timestamp getTimeArrival() {
        return (Timestamp) getAttributeInternal(TIMEARRIVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TIME_ARRIVAL using the alias name TimeArrival.
     * @param value value to set the TIME_ARRIVAL
     */
    public void setTimeArrival(Timestamp value) {
        setAttributeInternal(TIMEARRIVAL, value);
    }


    /**
     * Gets the attribute value for NUM using the alias name Num.
     * @return the NUM
     */
    public Integer getNum() {
        return (Integer) getAttributeInternal(NUM);
    }

    /**
     * Sets <code>value</code> as attribute value for NUM using the alias name Num.
     * @param value value to set the NUM
     */
    public void setNum(Integer value) {
        setAttributeInternal(NUM, value);
    }


    /**
     * Gets the attribute value for DECCENT using the alias name Deccent.
     * @return the DECCENT
     */
    public Integer getDeccent() {
        return (Integer) getAttributeInternal(DECCENT);
    }

    /**
     * Sets <code>value</code> as attribute value for DECCENT using the alias name Deccent.
     * @param value value to set the DECCENT
     */
    public void setDeccent(Integer value) {
        setAttributeInternal(DECCENT, value);
    }

    /**
     * Gets the attribute value for NUM using the alias name Num1.
     * @return the NUM
     */
    public DBSequence getNum1() {
        return (DBSequence) getAttributeInternal(NUM1);
    }

    /**
     * Sets <code>value</code> as attribute value for NUM using the alias name Num1.
     * @param value value to set the NUM
     */
    public void setNum1(DBSequence value) {
        setAttributeInternal(NUM1, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DrligneView.
     */
    public Row getDrligneView() {
        return (Row) getAttributeInternal(DRLIGNEVIEW);
    }

    /**
     * Sets the master-detail link DrligneView between this object and <code>value</code>.
     */
    public void setDrligneView(Row value) {
        setAttributeInternal(DRLIGNEVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link StopTimesView.
     */
    public RowIterator getStopTimesView() {
        return (RowIterator) getAttributeInternal(STOPTIMESVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link CalendarView.
     */
    public Row getCalendarView() {
        return (Row) getAttributeInternal(CALENDARVIEW);
    }

    /**
     * Sets the master-detail link CalendarView between this object and <code>value</code>.
     */
    public void setCalendarView(Row value) {
        setAttributeInternal(CALENDARVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link GroupExpView.
     */
    public Row getGroupExpView() {
        return (Row) getAttributeInternal(GROUPEXPVIEW);
    }

    /**
     * Sets the master-detail link GroupExpView between this object and <code>value</code>.
     */
    public void setGroupExpView(Row value) {
        setAttributeInternal(GROUPEXPVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TripsplanView.
     */
    public RowIterator getTripsplanView() {
        return (RowIterator) getAttributeInternal(TRIPSPLANVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DirecView1.
     */
    public RowSet getDirecView1() {
        return (RowSet) getAttributeInternal(DIRECVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CalendarView1.
     */
    public RowSet getCalendarView1() {
        return (RowSet) getAttributeInternal(CALENDARVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GroupExpView1.
     */
    public RowSet getGroupExpView1() {
        return (RowSet) getAttributeInternal(GROUPEXPVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrligneView1.
     */
    public RowSet getDrligneView1() {
        return (RowSet) getAttributeInternal(DRLIGNEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesOrNoView1.
     */
    public RowSet getYesOrNoView1() {
        return (RowSet) getAttributeInternal(YESORNOVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TripsView1.
     */
    public RowSet getTripsView1() {
        return (RowSet) getAttributeInternal(TRIPSVIEW1);
    }

    public void createStopTimes() {

        
            boolean first = true;
            Integer duree;
            Integer oldduree = 0;

            Integer distance;
            Integer olddistance = 0;

            //converstion DBsequence to Integer
            DBSequence dbSeq = this.getTripId();
            
            Integer dbSeqIntegerTrips = ConvertDBSeqToInteger(dbSeq);
                
            System.out.println("id :"+dbSeqIntegerTrips);

            // check if there are records in StopTime table
            if (this.getnbre().intValue() > 0) {
                deleteStopTimeTrip();
                doSave();
            }

            DrligneViewRowImpl currentLigne = (DrligneViewRowImpl) this.getDrligneView();
            RowSet itin;

            if (this.getDirectionId().compareTo("0") == 0)
                itin = (RowSet) currentLigne.getDritinView();
            else
                itin = (RowSet) currentLigne.getDritin1View();

            while (itin.hasNext()) {
                DritinViewRowImpl currentItin;
                Dritin1ViewRowImpl currentItin1;

                if (this.getDirectionId().compareTo("0") == 0) {
                    currentItin = (DritinViewRowImpl) itin.next();
                    inserteStopTime(currentItin, dbSeqIntegerTrips);
                } else {

                    currentItin1 = (Dritin1ViewRowImpl) itin.next();
                    if (first == true) {
                        duree = 0;
                        distance = 0;
                        oldduree = currentItin1.getRetour();
                        olddistance = currentItin1.getDistr();
                    } else {
                        duree = oldduree;
                        distance = olddistance;
                        oldduree = currentItin1.getRetour();
                        olddistance = currentItin1.getDistr();
                    }

                    first = false;
                    inserteStopTimeRet(currentItin1, dbSeqIntegerTrips, duree, distance);
                }

            }
            updateTimeReturn();

            doSave();
       

    }

    public void inserteStopTime(DritinViewRowImpl currentItin, Integer tripId) {

        EntityDefImpl stops = StopTimesImpl.getDefinitionObject();

        StopTimesImpl newstops = (StopTimesImpl) stops.createInstance2(getDBTransaction(), null);

        newstops.setTripId(tripId);
        newstops.setDecstat(currentItin.getDecstat());
        newstops.setStopHeadsign(currentItin.getDelstaa());


        newstops.setDepartureTime(this.getNewArrivalTime(this.getTimeDepart(), currentItin.getaller()));
        newstops.setArrivalTime(this.getNewArrivalTime(this.getTimeDepart(), currentItin.getaller()));

        newstops.setPickupType("0");

        newstops.setShapeDistTraveled(currentItin.getDista());
        newstops.setTimepoint("0");

    }

    public void inserteStopTimeRet(Dritin1ViewRowImpl currentItin, Integer tripId, Integer duree, Integer distance) {

        EntityDefImpl stops = StopTimesImpl.getDefinitionObject();

        StopTimesImpl newstops = (StopTimesImpl) stops.createInstance2(getDBTransaction(), null);

        newstops.setTripId(tripId);
        newstops.setDecstat(currentItin.getDecstat());
        newstops.setStopHeadsign(currentItin.getDelstaa());


        newstops.setDepartureTime(this.getNewArrivalTime(this.getTimeDepart(), duree));
        newstops.setArrivalTime(this.getNewArrivalTime(this.getTimeDepart(), duree));

        newstops.setPickupType("0");

        newstops.setShapeDistTraveled(distance);
        newstops.setTimepoint("0");

    }


    public void doSave() {
        try {
            getDBTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Timestamp getNewArrivalTime(Timestamp time, Integer period) {
        Date dNow = new Date(); // Instantiate a Date object
        Calendar cal = Calendar.getInstance();

        cal.setTime(time);
        cal.add(Calendar.MINUTE, period);

        dNow = cal.getTime();

        return new Timestamp(dNow.getTime());
    }

    public Integer ConvertDBSeqToInteger(DBSequence dbseq) {
        oracle.jbo.domain.Number dbSeqNumber = dbseq.getSequenceNumber();
        int dbSeqIntValue = dbSeqNumber.intValue();

        return new Integer(dbSeqIntValue);
    }

    public void deleteStopTimeTrip() {

        RowSet itin = (RowSet) this.getStopTimesView();
        while (itin.hasNext()) {
            StopTimesViewRowImpl current = (StopTimesViewRowImpl) itin.next();
            current.remove();
        }


    }

    public void updateTimeReturn() {
        this.setTimeReturn(this.getTimeArrival());
        System.out.println(" " + this.getTimeArrival());
        doSave();
    }
    
    
    
    public void updateGroupInTripsv2(DBSequence id, Integer grp){
        
       
              // create the key object
               Key key = new Key(new Object[] { id });
               TripsViewImpl vo = (TripsViewImpl)this.getTripsView1();
               //find the row using key reference in View Object.
               Row k=vo.getRow(key);
               //using this method we can set the new value to FirstName  
               System.out.println(" groupe last 1 :" + grp);
             //  if (grp == null) 
             //      k.setAttribute("Num", null);
             //  else
                   k.setAttribute("Num", grp);
               
               this.getDBTransaction().commit();
              System.out.println("the name is"+ k.getAttribute("Num"));
    }
    

}

