package com.soretrak.model.vo;


import com.soretrak.model.eo.StopTimesImpl;

import com.soretrak.model.eo.TripsImpl;


import com.soretrak.model.vo.common.DrligneViewRow;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 24 08:57:52 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DrligneViewRowImpl extends ViewRowImpl implements DrligneViewRow {
    public static final int ENTITY_DRLIGNE = 0;
    public static final int ENTITY_DRTYPLI = 1;
    public static final int ENTITY_DRCENTR = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Denumli,
        Denomli,
        Dectyli,
        Deltyli,
        Deltyla,
        Deprior,
        Dectyta,
        Dectyeq,
        Deccent,
        Detparc,
        Detrjva,
        Dedural,
        Detrjvr,
        Dedurrt,
        Depiste,
        Denomla,
        Dedatec,
        Dedatea,
        Destatu,
        Denbrkm,
        Detyplig,
        RefLig,
        Tabarlig,
        Rangtab,
        Decdeleg,
        Denatli,
        Deactif,
        Datearret,
        Dectyli1,
        AgencyId,
        RouteType,
        RouteUrl,
        RouteColor,
        RouteTextColor,
        ArDelcent,
        Deccent1,
        dureear,
        totkm,
        DritinView,
        DradaptView,
        Drdpla1View,
        DrtypliView,
        DrcentrView,
        PlanContView,
        AgencyView,
        TripsView,
        Dritin1View,
        DrdelegView,
        DrcentrView1,
        DrtypliView1,
        AgencyView1,
        RouteTypeView1,
        DrdelegView1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DENUMLI = AttributesEnum.Denumli.index();
    public static final int DENOMLI = AttributesEnum.Denomli.index();
    public static final int DECTYLI = AttributesEnum.Dectyli.index();
    public static final int DELTYLI = AttributesEnum.Deltyli.index();
    public static final int DELTYLA = AttributesEnum.Deltyla.index();
    public static final int DEPRIOR = AttributesEnum.Deprior.index();
    public static final int DECTYTA = AttributesEnum.Dectyta.index();
    public static final int DECTYEQ = AttributesEnum.Dectyeq.index();
    public static final int DECCENT = AttributesEnum.Deccent.index();
    public static final int DETPARC = AttributesEnum.Detparc.index();
    public static final int DETRJVA = AttributesEnum.Detrjva.index();
    public static final int DEDURAL = AttributesEnum.Dedural.index();
    public static final int DETRJVR = AttributesEnum.Detrjvr.index();
    public static final int DEDURRT = AttributesEnum.Dedurrt.index();
    public static final int DEPISTE = AttributesEnum.Depiste.index();
    public static final int DENOMLA = AttributesEnum.Denomla.index();
    public static final int DEDATEC = AttributesEnum.Dedatec.index();
    public static final int DEDATEA = AttributesEnum.Dedatea.index();
    public static final int DESTATU = AttributesEnum.Destatu.index();
    public static final int DENBRKM = AttributesEnum.Denbrkm.index();
    public static final int DETYPLIG = AttributesEnum.Detyplig.index();
    public static final int REFLIG = AttributesEnum.RefLig.index();
    public static final int TABARLIG = AttributesEnum.Tabarlig.index();
    public static final int RANGTAB = AttributesEnum.Rangtab.index();
    public static final int DECDELEG = AttributesEnum.Decdeleg.index();
    public static final int DENATLI = AttributesEnum.Denatli.index();
    public static final int DEACTIF = AttributesEnum.Deactif.index();
    public static final int DATEARRET = AttributesEnum.Datearret.index();
    public static final int DECTYLI1 = AttributesEnum.Dectyli1.index();
    public static final int AGENCYID = AttributesEnum.AgencyId.index();
    public static final int ROUTETYPE = AttributesEnum.RouteType.index();
    public static final int ROUTEURL = AttributesEnum.RouteUrl.index();
    public static final int ROUTECOLOR = AttributesEnum.RouteColor.index();
    public static final int ROUTETEXTCOLOR = AttributesEnum.RouteTextColor.index();
    public static final int ARDELCENT = AttributesEnum.ArDelcent.index();
    public static final int DECCENT1 = AttributesEnum.Deccent1.index();
    public static final int DUREEAR = AttributesEnum.dureear.index();
    public static final int TOTKM = AttributesEnum.totkm.index();
    public static final int DRITINVIEW = AttributesEnum.DritinView.index();
    public static final int DRADAPTVIEW = AttributesEnum.DradaptView.index();
    public static final int DRDPLA1VIEW = AttributesEnum.Drdpla1View.index();
    public static final int DRTYPLIVIEW = AttributesEnum.DrtypliView.index();
    public static final int DRCENTRVIEW = AttributesEnum.DrcentrView.index();
    public static final int PLANCONTVIEW = AttributesEnum.PlanContView.index();
    public static final int AGENCYVIEW = AttributesEnum.AgencyView.index();
    public static final int TRIPSVIEW = AttributesEnum.TripsView.index();
    public static final int DRITIN1VIEW = AttributesEnum.Dritin1View.index();
    public static final int DRDELEGVIEW = AttributesEnum.DrdelegView.index();
    public static final int DRCENTRVIEW1 = AttributesEnum.DrcentrView1.index();
    public static final int DRTYPLIVIEW1 = AttributesEnum.DrtypliView1.index();
    public static final int AGENCYVIEW1 = AttributesEnum.AgencyView1.index();
    public static final int ROUTETYPEVIEW1 = AttributesEnum.RouteTypeView1.index();
    public static final int DRDELEGVIEW1 = AttributesEnum.DrdelegView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DrligneViewRowImpl() {
    }

    /**
     * Gets Drligne entity object.
     * @return the Drligne
     */
    public EntityImpl getDrligne() {
        return (EntityImpl) getEntity(ENTITY_DRLIGNE);
    }

    /**
     * Gets Drtypli entity object.
     * @return the Drtypli
     */
    public EntityImpl getDrtypli() {
        return (EntityImpl) getEntity(ENTITY_DRTYPLI);
    }

    /**
     * Gets Drcentr entity object.
     * @return the Drcentr
     */
    public EntityImpl getDrcentr() {
        return (EntityImpl) getEntity(ENTITY_DRCENTR);
    }

    /**
     * Gets the attribute value for DENUMLI using the alias name Denumli.
     * @return the DENUMLI
     */
    public String getDenumli() {
        return (String) getAttributeInternal(DENUMLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DENUMLI using the alias name Denumli.
     * @param value value to set the DENUMLI
     */
    public void setDenumli(String value) {
        setAttributeInternal(DENUMLI, value);
    }

    /**
     * Gets the attribute value for DENOMLI using the alias name Denomli.
     * @return the DENOMLI
     */
    public String getDenomli() {
        return (String) getAttributeInternal(DENOMLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DENOMLI using the alias name Denomli.
     * @param value value to set the DENOMLI
     */
    public void setDenomli(String value) {
        setAttributeInternal(DENOMLI, value);
    }

    /**
     * Gets the attribute value for DECTYLI using the alias name Dectyli.
     * @return the DECTYLI
     */
    public String getDectyli() {
        return (String) getAttributeInternal(DECTYLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYLI using the alias name Dectyli.
     * @param value value to set the DECTYLI
     */
    public void setDectyli(String value) {
        setAttributeInternal(DECTYLI, value);
    }

    /**
     * Gets the attribute value for DELTYLI using the alias name Deltyli.
     * @return the DELTYLI
     */
    public String getDeltyli() {
        return (String) getAttributeInternal(DELTYLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DELTYLI using the alias name Deltyli.
     * @param value value to set the DELTYLI
     */
    public void setDeltyli(String value) {
        setAttributeInternal(DELTYLI, value);
    }

    /**
     * Gets the attribute value for DELTYLA using the alias name Deltyla.
     * @return the DELTYLA
     */
    public String getDeltyla() {
        return (String) getAttributeInternal(DELTYLA);
    }

    /**
     * Sets <code>value</code> as attribute value for DELTYLA using the alias name Deltyla.
     * @param value value to set the DELTYLA
     */
    public void setDeltyla(String value) {
        setAttributeInternal(DELTYLA, value);
    }

    /**
     * Gets the attribute value for DEPRIOR using the alias name Deprior.
     * @return the DEPRIOR
     */
    public Integer getDeprior() {
        return (Integer) getAttributeInternal(DEPRIOR);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPRIOR using the alias name Deprior.
     * @param value value to set the DEPRIOR
     */
    public void setDeprior(Integer value) {
        setAttributeInternal(DEPRIOR, value);
    }

    /**
     * Gets the attribute value for DECTYTA using the alias name Dectyta.
     * @return the DECTYTA
     */
    public String getDectyta() {
        return (String) getAttributeInternal(DECTYTA);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYTA using the alias name Dectyta.
     * @param value value to set the DECTYTA
     */
    public void setDectyta(String value) {
        setAttributeInternal(DECTYTA, value);
    }

    /**
     * Gets the attribute value for DECTYEQ using the alias name Dectyeq.
     * @return the DECTYEQ
     */
    public String getDectyeq() {
        return (String) getAttributeInternal(DECTYEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYEQ using the alias name Dectyeq.
     * @param value value to set the DECTYEQ
     */
    public void setDectyeq(String value) {
        setAttributeInternal(DECTYEQ, value);
    }

    /**
     * Gets the attribute value for DECCENT using the alias name Deccent.
     * @return the DECCENT
     */
    public String getDeccent() {
        return (String) getAttributeInternal(DECCENT);
    }

    /**
     * Sets <code>value</code> as attribute value for DECCENT using the alias name Deccent.
     * @param value value to set the DECCENT
     */
    public void setDeccent(String value) {
        setAttributeInternal(DECCENT, value);
    }

    /**
     * Gets the attribute value for DETPARC using the alias name Detparc.
     * @return the DETPARC
     */
    public String getDetparc() {
        return (String) getAttributeInternal(DETPARC);
    }

    /**
     * Sets <code>value</code> as attribute value for DETPARC using the alias name Detparc.
     * @param value value to set the DETPARC
     */
    public void setDetparc(String value) {
        setAttributeInternal(DETPARC, value);
    }

    /**
     * Gets the attribute value for DETRJVA using the alias name Detrjva.
     * @return the DETRJVA
     */
    public BigDecimal getDetrjva() {
        return (BigDecimal) getAttributeInternal(DETRJVA);
    }

    /**
     * Sets <code>value</code> as attribute value for DETRJVA using the alias name Detrjva.
     * @param value value to set the DETRJVA
     */
    public void setDetrjva(BigDecimal value) {
        setAttributeInternal(DETRJVA, value);
    }

    /**
     * Gets the attribute value for DEDURAL using the alias name Dedural.
     * @return the DEDURAL
     */
    public Integer getDedural() {
        return (Integer) getAttributeInternal(DEDURAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDURAL using the alias name Dedural.
     * @param value value to set the DEDURAL
     */
    public void setDedural(Integer value) {
        setAttributeInternal(DEDURAL, value);
    }

    /**
     * Gets the attribute value for DETRJVR using the alias name Detrjvr.
     * @return the DETRJVR
     */
    public BigDecimal getDetrjvr() {
        return (BigDecimal) getAttributeInternal(DETRJVR);
    }

    /**
     * Sets <code>value</code> as attribute value for DETRJVR using the alias name Detrjvr.
     * @param value value to set the DETRJVR
     */
    public void setDetrjvr(BigDecimal value) {
        setAttributeInternal(DETRJVR, value);
    }

    /**
     * Gets the attribute value for DEDURRT using the alias name Dedurrt.
     * @return the DEDURRT
     */
    public Integer getDedurrt() {
        return (Integer) getAttributeInternal(DEDURRT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDURRT using the alias name Dedurrt.
     * @param value value to set the DEDURRT
     */
    public void setDedurrt(Integer value) {
        setAttributeInternal(DEDURRT, value);
    }

    /**
     * Gets the attribute value for DEPISTE using the alias name Depiste.
     * @return the DEPISTE
     */
    public BigDecimal getDepiste() {
        return (BigDecimal) getAttributeInternal(DEPISTE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPISTE using the alias name Depiste.
     * @param value value to set the DEPISTE
     */
    public void setDepiste(BigDecimal value) {
        setAttributeInternal(DEPISTE, value);
    }

    /**
     * Gets the attribute value for DENOMLA using the alias name Denomla.
     * @return the DENOMLA
     */
    public String getDenomla() {
        return (String) getAttributeInternal(DENOMLA);
    }

    /**
     * Sets <code>value</code> as attribute value for DENOMLA using the alias name Denomla.
     * @param value value to set the DENOMLA
     */
    public void setDenomla(String value) {
        setAttributeInternal(DENOMLA, value);
    }

    /**
     * Gets the attribute value for DEDATEC using the alias name Dedatec.
     * @return the DEDATEC
     */
    public Timestamp getDedatec() {
        return (Timestamp) getAttributeInternal(DEDATEC);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDATEC using the alias name Dedatec.
     * @param value value to set the DEDATEC
     */
    public void setDedatec(Timestamp value) {
        setAttributeInternal(DEDATEC, value);
    }

    /**
     * Gets the attribute value for DEDATEA using the alias name Dedatea.
     * @return the DEDATEA
     */
    public Timestamp getDedatea() {
        return (Timestamp) getAttributeInternal(DEDATEA);
    }

    /**
     * Sets <code>value</code> as attribute value for DEDATEA using the alias name Dedatea.
     * @param value value to set the DEDATEA
     */
    public void setDedatea(Timestamp value) {
        setAttributeInternal(DEDATEA, value);
    }

    /**
     * Gets the attribute value for DESTATU using the alias name Destatu.
     * @return the DESTATU
     */
    public String getDestatu() {
        return (String) getAttributeInternal(DESTATU);
    }

    /**
     * Sets <code>value</code> as attribute value for DESTATU using the alias name Destatu.
     * @param value value to set the DESTATU
     */
    public void setDestatu(String value) {
        setAttributeInternal(DESTATU, value);
    }

    /**
     * Gets the attribute value for DENBRKM using the alias name Denbrkm.
     * @return the DENBRKM
     */
    public BigDecimal getDenbrkm() {
        return (BigDecimal) getAttributeInternal(DENBRKM);
    }

    /**
     * Sets <code>value</code> as attribute value for DENBRKM using the alias name Denbrkm.
     * @param value value to set the DENBRKM
     */
    public void setDenbrkm(BigDecimal value) {
        setAttributeInternal(DENBRKM, value);
    }

    /**
     * Gets the attribute value for DETYPLIG using the alias name Detyplig.
     * @return the DETYPLIG
     */
    public String getDetyplig() {
        return (String) getAttributeInternal(DETYPLIG);
    }

    /**
     * Sets <code>value</code> as attribute value for DETYPLIG using the alias name Detyplig.
     * @param value value to set the DETYPLIG
     */
    public void setDetyplig(String value) {
        setAttributeInternal(DETYPLIG, value);
    }

    /**
     * Gets the attribute value for REF_LIG using the alias name RefLig.
     * @return the REF_LIG
     */
    public String getRefLig() {
        return (String) getAttributeInternal(REFLIG);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_LIG using the alias name RefLig.
     * @param value value to set the REF_LIG
     */
    public void setRefLig(String value) {
        setAttributeInternal(REFLIG, value);
    }

    /**
     * Gets the attribute value for TABARLIG using the alias name Tabarlig.
     * @return the TABARLIG
     */
    public String getTabarlig() {
        return (String) getAttributeInternal(TABARLIG);
    }

    /**
     * Sets <code>value</code> as attribute value for TABARLIG using the alias name Tabarlig.
     * @param value value to set the TABARLIG
     */
    public void setTabarlig(String value) {
        setAttributeInternal(TABARLIG, value);
    }

    /**
     * Gets the attribute value for RANGTAB using the alias name Rangtab.
     * @return the RANGTAB
     */
    public Integer getRangtab() {
        return (Integer) getAttributeInternal(RANGTAB);
    }

    /**
     * Sets <code>value</code> as attribute value for RANGTAB using the alias name Rangtab.
     * @param value value to set the RANGTAB
     */
    public void setRangtab(Integer value) {
        setAttributeInternal(RANGTAB, value);
    }

    /**
     * Gets the attribute value for DECDELEG using the alias name Decdeleg.
     * @return the DECDELEG
     */
    public Integer getDecdeleg() {
        return (Integer) getAttributeInternal(DECDELEG);
    }

    /**
     * Sets <code>value</code> as attribute value for DECDELEG using the alias name Decdeleg.
     * @param value value to set the DECDELEG
     */
    public void setDecdeleg(Integer value) {
        setAttributeInternal(DECDELEG, value);
    }

    /**
     * Gets the attribute value for DENATLI using the alias name Denatli.
     * @return the DENATLI
     */
    public Integer getDenatli() {
        return (Integer) getAttributeInternal(DENATLI);
    }

    /**
     * Sets <code>value</code> as attribute value for DENATLI using the alias name Denatli.
     * @param value value to set the DENATLI
     */
    public void setDenatli(Integer value) {
        setAttributeInternal(DENATLI, value);
    }

    /**
     * Gets the attribute value for DEACTIF using the alias name Deactif.
     * @return the DEACTIF
     */
    public Integer getDeactif() {
        return (Integer) getAttributeInternal(DEACTIF);
    }

    /**
     * Sets <code>value</code> as attribute value for DEACTIF using the alias name Deactif.
     * @param value value to set the DEACTIF
     */
    public void setDeactif(Integer value) {
        setAttributeInternal(DEACTIF, value);
    }

    /**
     * Gets the attribute value for DATEARRET using the alias name Datearret.
     * @return the DATEARRET
     */
    public Timestamp getDatearret() {
        return (Timestamp) getAttributeInternal(DATEARRET);
    }

    /**
     * Sets <code>value</code> as attribute value for DATEARRET using the alias name Datearret.
     * @param value value to set the DATEARRET
     */
    public void setDatearret(Timestamp value) {
        setAttributeInternal(DATEARRET, value);
    }

    /**
     * Gets the attribute value for DECTYLI using the alias name Dectyli1.
     * @return the DECTYLI
     */
    public String getDectyli1() {
        return (String) getAttributeInternal(DECTYLI1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECTYLI using the alias name Dectyli1.
     * @param value value to set the DECTYLI
     */
    public void setDectyli1(String value) {
        setAttributeInternal(DECTYLI1, value);
    }

    /**
     * Gets the attribute value for AGENCY_ID using the alias name AgencyId.
     * @return the AGENCY_ID
     */
    public String getAgencyId() {
        return (String) getAttributeInternal(AGENCYID);
    }

    /**
     * Sets <code>value</code> as attribute value for AGENCY_ID using the alias name AgencyId.
     * @param value value to set the AGENCY_ID
     */
    public void setAgencyId(String value) {
        setAttributeInternal(AGENCYID, value);
    }

    /**
     * Gets the attribute value for ROUTE_TYPE using the alias name RouteType.
     * @return the ROUTE_TYPE
     */
    public String getRouteType() {
        return (String) getAttributeInternal(ROUTETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ROUTE_TYPE using the alias name RouteType.
     * @param value value to set the ROUTE_TYPE
     */
    public void setRouteType(String value) {
        setAttributeInternal(ROUTETYPE, value);
    }

    /**
     * Gets the attribute value for ROUTE_URL using the alias name RouteUrl.
     * @return the ROUTE_URL
     */
    public String getRouteUrl() {
        return (String) getAttributeInternal(ROUTEURL);
    }

    /**
     * Sets <code>value</code> as attribute value for ROUTE_URL using the alias name RouteUrl.
     * @param value value to set the ROUTE_URL
     */
    public void setRouteUrl(String value) {
        setAttributeInternal(ROUTEURL, value);
    }

    /**
     * Gets the attribute value for ROUTE_COLOR using the alias name RouteColor.
     * @return the ROUTE_COLOR
     */
    public String getRouteColor() {
        return (String) getAttributeInternal(ROUTECOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for ROUTE_COLOR using the alias name RouteColor.
     * @param value value to set the ROUTE_COLOR
     */
    public void setRouteColor(String value) {
        setAttributeInternal(ROUTECOLOR, value);
    }

    /**
     * Gets the attribute value for ROUTE_TEXT_COLOR using the alias name RouteTextColor.
     * @return the ROUTE_TEXT_COLOR
     */
    public String getRouteTextColor() {
        return (String) getAttributeInternal(ROUTETEXTCOLOR);
    }

    /**
     * Sets <code>value</code> as attribute value for ROUTE_TEXT_COLOR using the alias name RouteTextColor.
     * @param value value to set the ROUTE_TEXT_COLOR
     */
    public void setRouteTextColor(String value) {
        setAttributeInternal(ROUTETEXTCOLOR, value);
    }

    /**
     * Gets the attribute value for AR_DELCENT using the alias name ArDelcent.
     * @return the AR_DELCENT
     */
    public String getArDelcent() {
        return (String) getAttributeInternal(ARDELCENT);
    }

    /**
     * Sets <code>value</code> as attribute value for AR_DELCENT using the alias name ArDelcent.
     * @param value value to set the AR_DELCENT
     */
    public void setArDelcent(String value) {
        setAttributeInternal(ARDELCENT, value);
    }

    /**
     * Gets the attribute value for DECCENT using the alias name Deccent1.
     * @return the DECCENT
     */
    public Integer getDeccent1() {
        return (Integer) getAttributeInternal(DECCENT1);
    }

    /**
     * Sets <code>value</code> as attribute value for DECCENT using the alias name Deccent1.
     * @param value value to set the DECCENT
     */
    public void setDeccent1(Integer value) {
        setAttributeInternal(DECCENT1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute dureear.
     * @return the dureear
     */
    public Integer getdureear() {
        return (Integer) getAttributeInternal(DUREEAR);
    }

    /**
     * Gets the attribute value for the calculated attribute totkm.
     * @return the totkm
     */
    public Integer gettotkm() {
        return (Integer) getAttributeInternal(TOTKM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DritinView.
     */
    public RowIterator getDritinView() {
        return (RowIterator) getAttributeInternal(DRITINVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DradaptView.
     */
    public RowIterator getDradaptView() {
        return (RowIterator) getAttributeInternal(DRADAPTVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Drdpla1View.
     */
    public RowIterator getDrdpla1View() {
        return (RowIterator) getAttributeInternal(DRDPLA1VIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DrtypliView.
     */
    public Row getDrtypliView() {
        return (Row) getAttributeInternal(DRTYPLIVIEW);
    }

    /**
     * Sets the master-detail link DrtypliView between this object and <code>value</code>.
     */
    public void setDrtypliView(Row value) {
        setAttributeInternal(DRTYPLIVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DrcentrView.
     */
    public Row getDrcentrView() {
        return (Row) getAttributeInternal(DRCENTRVIEW);
    }

    /**
     * Sets the master-detail link DrcentrView between this object and <code>value</code>.
     */
    public void setDrcentrView(Row value) {
        setAttributeInternal(DRCENTRVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PlanContView.
     */
    public RowIterator getPlanContView() {
        return (RowIterator) getAttributeInternal(PLANCONTVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link AgencyView.
     */
    public Row getAgencyView() {
        return (Row) getAttributeInternal(AGENCYVIEW);
    }

    /**
     * Sets the master-detail link AgencyView between this object and <code>value</code>.
     */
    public void setAgencyView(Row value) {
        setAttributeInternal(AGENCYVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link TripsView.
     */
    public RowIterator getTripsView() {
        return (RowIterator) getAttributeInternal(TRIPSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link Dritin1View.
     */
    public RowIterator getDritin1View() {
        return (RowIterator) getAttributeInternal(DRITIN1VIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DrdelegView.
     */
    public Row getDrdelegView() {
        return (Row) getAttributeInternal(DRDELEGVIEW);
    }

    /**
     * Sets the master-detail link DrdelegView between this object and <code>value</code>.
     */
    public void setDrdelegView(Row value) {
        setAttributeInternal(DRDELEGVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrcentrView1.
     */
    public RowSet getDrcentrView1() {
        return (RowSet) getAttributeInternal(DRCENTRVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrtypliView1.
     */
    public RowSet getDrtypliView1() {
        return (RowSet) getAttributeInternal(DRTYPLIVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AgencyView1.
     */
    public RowSet getAgencyView1() {
        return (RowSet) getAttributeInternal(AGENCYVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RouteTypeView1.
     */
    public RowSet getRouteTypeView1() {
        return (RowSet) getAttributeInternal(ROUTETYPEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DrdelegView1.
     */
    public RowSet getDrdelegView1() {
        return (RowSet) getAttributeInternal(DRDELEGVIEW1);
    }


    public String createReturnTrips(Integer oldtrip,String oldligne,Integer oldServ,String headSign,String Shortname,String direc,String timeDepart, Integer vgrp){
        EntityDefImpl trips =  TripsImpl.getDefinitionObject();

        TripsImpl newTrips = (TripsImpl) trips.createInstance2(getDBTransaction(), null);

        newTrips.setDenumli(oldligne);
        newTrips.setServiceId(oldServ);
        if (direc.compareTo("0")==0)
            newTrips.setDirectionId("1");
        else
            newTrips.setDirectionId("0");
        
        newTrips.setTripHeadsign(headSign);
        newTrips.setTripShortName(Shortname);
        
        newTrips.setTimeDepart(convertStringToTimestamp(timeDepart));
        newTrips.setHaveret("O");
        
        System.out.println("oldtrip return trips  :"+oldtrip);
        newTrips.setTripNid(oldtrip);
        
        newTrips.setNum(vgrp);
        
        doSave();
        System.out.println(newTrips.getTripId().toString());
        return newTrips.getTripId().toString();
        
    }
    
    public void doSave() {
        try {
            getDBTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public Timestamp convertStringToTimestamp(String str_date) {
        try {
          DateFormat formatter;
          formatter = new SimpleDateFormat("HH:mm");
          //String fulldate="01/04/2016 "  +str_date;
          java.util.Date date = (java.util.Date) formatter.parse(str_date);
          java.sql.Timestamp timeStampDate = new Timestamp(date.getTime());

          return timeStampDate;
        } catch (ParseException e) {
          System.out.println("Exception :" + e);
          return null;
        }
      }

}

