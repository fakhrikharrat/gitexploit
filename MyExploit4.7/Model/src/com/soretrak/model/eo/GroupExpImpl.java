package com.soretrak.model.eo;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 09 15:26:06 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GroupExpImpl extends EntityImpl {
    @Override
    public void remove() {
        // TODO Implement this method
       // super.remove();
        
        
       RowIterator ri = getTripsView();
       int count = ri.getRowCount();
       
       
       if (count > 0) {
         throw new JboException("Vous ne pouvez pas supprimer ce groupe, des voyages sont affectées!!!");
       } else {
         super.remove();
       }
    }
    
    public RowIterator getTripsView() {
      return (RowIterator)getAttributeInternal(TRIPS);
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Num,
        Libelle,
        Decoper,
        Etat,
        UserCre,
        DateCre,
        UserMod,
        DateMod,
        Amp,
        Deccent,
        Typgrp,
        Drperio,
        Trips,
        Drcentr;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int NUM = AttributesEnum.Num.index();
    public static final int LIBELLE = AttributesEnum.Libelle.index();
    public static final int DECOPER = AttributesEnum.Decoper.index();
    public static final int ETAT = AttributesEnum.Etat.index();
    public static final int USERCRE = AttributesEnum.UserCre.index();
    public static final int DATECRE = AttributesEnum.DateCre.index();
    public static final int USERMOD = AttributesEnum.UserMod.index();
    public static final int DATEMOD = AttributesEnum.DateMod.index();
    public static final int AMP = AttributesEnum.Amp.index();
    public static final int DECCENT = AttributesEnum.Deccent.index();
    public static final int TYPGRP = AttributesEnum.Typgrp.index();
    public static final int DRPERIO = AttributesEnum.Drperio.index();
    public static final int TRIPS = AttributesEnum.Trips.index();
    public static final int DRCENTR = AttributesEnum.Drcentr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GroupExpImpl() {
    }

    /**
     * @param num key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence num) {
        return new Key(new Object[] { num });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soretrak.model.eo.GroupExp");
    }


}

