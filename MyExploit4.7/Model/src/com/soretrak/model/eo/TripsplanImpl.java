package com.soretrak.model.eo;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 10 19:14:37 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TripsplanImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dateplan,
        Planid,
        Typepl,
        TripId,
        LocId,
        Chauplan,
        Recplan,
        Vehicpaln,
        Chauexec,
        Recexec,
        Vehicexec,
        Etat,
        UserCre,
        DateCre,
        UserMod,
        DateMod,
        IdMiss,
        Drvehic,
        Drvehic1,
        Trips,
        Dragent,
        Dragent1,
        Dragent2,
        Dragent3,
        Daysplan,
        Drdmdloc,
        Drmiss,
        Realtime;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DATEPLAN = AttributesEnum.Dateplan.index();
    public static final int PLANID = AttributesEnum.Planid.index();
    public static final int TYPEPL = AttributesEnum.Typepl.index();
    public static final int TRIPID = AttributesEnum.TripId.index();
    public static final int LOCID = AttributesEnum.LocId.index();
    public static final int CHAUPLAN = AttributesEnum.Chauplan.index();
    public static final int RECPLAN = AttributesEnum.Recplan.index();
    public static final int VEHICPALN = AttributesEnum.Vehicpaln.index();
    public static final int CHAUEXEC = AttributesEnum.Chauexec.index();
    public static final int RECEXEC = AttributesEnum.Recexec.index();
    public static final int VEHICEXEC = AttributesEnum.Vehicexec.index();
    public static final int ETAT = AttributesEnum.Etat.index();
    public static final int USERCRE = AttributesEnum.UserCre.index();
    public static final int DATECRE = AttributesEnum.DateCre.index();
    public static final int USERMOD = AttributesEnum.UserMod.index();
    public static final int DATEMOD = AttributesEnum.DateMod.index();
    public static final int IDMISS = AttributesEnum.IdMiss.index();
    public static final int DRVEHIC = AttributesEnum.Drvehic.index();
    public static final int DRVEHIC1 = AttributesEnum.Drvehic1.index();
    public static final int TRIPS = AttributesEnum.Trips.index();
    public static final int DRAGENT = AttributesEnum.Dragent.index();
    public static final int DRAGENT1 = AttributesEnum.Dragent1.index();
    public static final int DRAGENT2 = AttributesEnum.Dragent2.index();
    public static final int DRAGENT3 = AttributesEnum.Dragent3.index();
    public static final int DAYSPLAN = AttributesEnum.Daysplan.index();
    public static final int DRDMDLOC = AttributesEnum.Drdmdloc.index();
    public static final int DRMISS = AttributesEnum.Drmiss.index();
    public static final int REALTIME = AttributesEnum.Realtime.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TripsplanImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soretrak.model.eo.Tripsplan");
    }


    /**
     * Gets the attribute value for Dateplan, using the alias name Dateplan.
     * @return the value of Dateplan
     */
    public Date getDateplan() {
        return (Date) getAttributeInternal(DATEPLAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dateplan.
     * @param value value to set the Dateplan
     */
    public void setDateplan(Date value) {
        setAttributeInternal(DATEPLAN, value);
    }

    /**
     * Gets the attribute value for Planid, using the alias name Planid.
     * @return the value of Planid
     */
    public DBSequence getPlanid() {
        return (DBSequence) getAttributeInternal(PLANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Planid.
     * @param value value to set the Planid
     */
    public void setPlanid(DBSequence value) {
        setAttributeInternal(PLANID, value);
    }

    /**
     * Gets the attribute value for Typepl, using the alias name Typepl.
     * @return the value of Typepl
     */
    public String getTypepl() {
        return (String) getAttributeInternal(TYPEPL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Typepl.
     * @param value value to set the Typepl
     */
    public void setTypepl(String value) {
        setAttributeInternal(TYPEPL, value);
    }

    /**
     * Gets the attribute value for TripId, using the alias name TripId.
     * @return the value of TripId
     */
    public Integer getTripId() {
        return (Integer) getAttributeInternal(TRIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TripId.
     * @param value value to set the TripId
     */
    public void setTripId(Integer value) {
        setAttributeInternal(TRIPID, value);
    }

    /**
     * Gets the attribute value for LocId, using the alias name LocId.
     * @return the value of LocId
     */
    public Integer getLocId() {
        return (Integer) getAttributeInternal(LOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocId.
     * @param value value to set the LocId
     */
    public void setLocId(Integer value) {
        setAttributeInternal(LOCID, value);
    }

    /**
     * Gets the attribute value for Chauplan, using the alias name Chauplan.
     * @return the value of Chauplan
     */
    public Integer getChauplan() {
        return (Integer) getAttributeInternal(CHAUPLAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Chauplan.
     * @param value value to set the Chauplan
     */
    public void setChauplan(Integer value) {
        setAttributeInternal(CHAUPLAN, value);
    }

    /**
     * Gets the attribute value for Recplan, using the alias name Recplan.
     * @return the value of Recplan
     */
    public Integer getRecplan() {
        return (Integer) getAttributeInternal(RECPLAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Recplan.
     * @param value value to set the Recplan
     */
    public void setRecplan(Integer value) {
        setAttributeInternal(RECPLAN, value);
    }

    /**
     * Gets the attribute value for Vehicpaln, using the alias name Vehicpaln.
     * @return the value of Vehicpaln
     */
    public String getVehicpaln() {
        return (String) getAttributeInternal(VEHICPALN);
    }

    /**
     * Sets <code>value</code> as the attribute value for Vehicpaln.
     * @param value value to set the Vehicpaln
     */
    public void setVehicpaln(String value) {
        setAttributeInternal(VEHICPALN, value);
    }

    /**
     * Gets the attribute value for Chauexec, using the alias name Chauexec.
     * @return the value of Chauexec
     */
    public Integer getChauexec() {
        return (Integer) getAttributeInternal(CHAUEXEC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Chauexec.
     * @param value value to set the Chauexec
     */
    public void setChauexec(Integer value) {
        setAttributeInternal(CHAUEXEC, value);
    }

    /**
     * Gets the attribute value for Recexec, using the alias name Recexec.
     * @return the value of Recexec
     */
    public Integer getRecexec() {
        return (Integer) getAttributeInternal(RECEXEC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Recexec.
     * @param value value to set the Recexec
     */
    public void setRecexec(Integer value) {
        setAttributeInternal(RECEXEC, value);
    }

    /**
     * Gets the attribute value for Vehicexec, using the alias name Vehicexec.
     * @return the value of Vehicexec
     */
    public String getVehicexec() {
        return (String) getAttributeInternal(VEHICEXEC);
    }

    /**
     * Sets <code>value</code> as the attribute value for Vehicexec.
     * @param value value to set the Vehicexec
     */
    public void setVehicexec(String value) {
        setAttributeInternal(VEHICEXEC, value);
    }

    /**
     * Gets the attribute value for Etat, using the alias name Etat.
     * @return the value of Etat
     */
    public String getEtat() {
        return (String) getAttributeInternal(ETAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Etat.
     * @param value value to set the Etat
     */
    public void setEtat(String value) {
        setAttributeInternal(ETAT, value);
    }

    /**
     * Gets the attribute value for UserCre, using the alias name UserCre.
     * @return the value of UserCre
     */
    public String getUserCre() {
        return (String) getAttributeInternal(USERCRE);
    }

    /**
     * Gets the attribute value for DateCre, using the alias name DateCre.
     * @return the value of DateCre
     */
    public Timestamp getDateCre() {
        return (Timestamp) getAttributeInternal(DATECRE);
    }

    /**
     * Gets the attribute value for UserMod, using the alias name UserMod.
     * @return the value of UserMod
     */
    public String getUserMod() {
        return (String) getAttributeInternal(USERMOD);
    }

    /**
     * Gets the attribute value for DateMod, using the alias name DateMod.
     * @return the value of DateMod
     */
    public Timestamp getDateMod() {
        return (Timestamp) getAttributeInternal(DATEMOD);
    }

    /**
     * Gets the attribute value for IdMiss, using the alias name IdMiss.
     * @return the value of IdMiss
     */
    public Integer getIdMiss() {
        return (Integer) getAttributeInternal(IDMISS);
    }

    /**
     * Sets <code>value</code> as the attribute value for IdMiss.
     * @param value value to set the IdMiss
     */
    public void setIdMiss(Integer value) {
        setAttributeInternal(IDMISS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDrvehic() {
        return (EntityImpl) getAttributeInternal(DRVEHIC);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDrvehic(EntityImpl value) {
        setAttributeInternal(DRVEHIC, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDrvehic1() {
        return (EntityImpl) getAttributeInternal(DRVEHIC1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDrvehic1(EntityImpl value) {
        setAttributeInternal(DRVEHIC1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public TripsImpl getTrips() {
        return (TripsImpl) getAttributeInternal(TRIPS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTrips(TripsImpl value) {
        setAttributeInternal(TRIPS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDragent() {
        return (EntityImpl) getAttributeInternal(DRAGENT);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDragent(EntityImpl value) {
        setAttributeInternal(DRAGENT, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDragent1() {
        return (EntityImpl) getAttributeInternal(DRAGENT1);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDragent1(EntityImpl value) {
        setAttributeInternal(DRAGENT1, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDragent2() {
        return (EntityImpl) getAttributeInternal(DRAGENT2);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDragent2(EntityImpl value) {
        setAttributeInternal(DRAGENT2, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDragent3() {
        return (EntityImpl) getAttributeInternal(DRAGENT3);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDragent3(EntityImpl value) {
        setAttributeInternal(DRAGENT3, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDaysplan() {
        return (EntityImpl) getAttributeInternal(DAYSPLAN);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDaysplan(EntityImpl value) {
        setAttributeInternal(DAYSPLAN, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public DrdmdlocImpl getDrdmdloc() {
        return (DrdmdlocImpl) getAttributeInternal(DRDMDLOC);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDrdmdloc(DrdmdlocImpl value) {
        setAttributeInternal(DRDMDLOC, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDrmiss() {
        return (EntityImpl) getAttributeInternal(DRMISS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDrmiss(EntityImpl value) {
        setAttributeInternal(DRMISS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getRealtime() {
        return (EntityImpl) getAttributeInternal(REALTIME);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setRealtime(EntityImpl value) {
        setAttributeInternal(REALTIME, value);
    }

    /**
     * @param dateplan key constituent
     * @param planid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Date dateplan, DBSequence planid) {
        return new Key(new Object[] { dateplan, planid });
    }


}

