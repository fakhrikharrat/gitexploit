package com.soretrak.model.eo;

import java.sql.Timestamp;

import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 24 15:14:31 UTC 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StopTimesImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TripId,
        Decstat,
        StopSequence,
        ArrivalTime,
        DepartureTime,
        StopHeadsign,
        PickupType,
        ShapeDistTraveled,
        Timepoint,
        Trips,
        Drstati;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TRIPID = AttributesEnum.TripId.index();
    public static final int DECSTAT = AttributesEnum.Decstat.index();
    public static final int STOPSEQUENCE = AttributesEnum.StopSequence.index();
    public static final int ARRIVALTIME = AttributesEnum.ArrivalTime.index();
    public static final int DEPARTURETIME = AttributesEnum.DepartureTime.index();
    public static final int STOPHEADSIGN = AttributesEnum.StopHeadsign.index();
    public static final int PICKUPTYPE = AttributesEnum.PickupType.index();
    public static final int SHAPEDISTTRAVELED = AttributesEnum.ShapeDistTraveled.index();
    public static final int TIMEPOINT = AttributesEnum.Timepoint.index();
    public static final int TRIPS = AttributesEnum.Trips.index();
    public static final int DRSTATI = AttributesEnum.Drstati.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StopTimesImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.soretrak.model.eo.StopTimes");
    }


    /**
     * Gets the attribute value for TripId, using the alias name TripId.
     * @return the value of TripId
     */
    public Integer getTripId() {
        return (Integer) getAttributeInternal(TRIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TripId.
     * @param value value to set the TripId
     */
    public void setTripId(Integer value) {
        setAttributeInternal(TRIPID, value);
    }

    /**
     * Gets the attribute value for Decstat, using the alias name Decstat.
     * @return the value of Decstat
     */
    public String getDecstat() {
        return (String) getAttributeInternal(DECSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Decstat.
     * @param value value to set the Decstat
     */
    public void setDecstat(String value) {
        setAttributeInternal(DECSTAT, value);
    }

    /**
     * Gets the attribute value for StopSequence, using the alias name StopSequence.
     * @return the value of StopSequence
     */
    public DBSequence getStopSequence() {
        return (DBSequence) getAttributeInternal(STOPSEQUENCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StopSequence.
     * @param value value to set the StopSequence
     */
    public void setStopSequence(DBSequence value) {
        setAttributeInternal(STOPSEQUENCE, value);
    }

    /**
     * Gets the attribute value for ArrivalTime, using the alias name ArrivalTime.
     * @return the value of ArrivalTime
     */
    public Timestamp getArrivalTime() {
        return (Timestamp) getAttributeInternal(ARRIVALTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArrivalTime.
     * @param value value to set the ArrivalTime
     */
    public void setArrivalTime(Timestamp value) {
        setAttributeInternal(ARRIVALTIME, value);
    }

    /**
     * Gets the attribute value for DepartureTime, using the alias name DepartureTime.
     * @return the value of DepartureTime
     */
    public Timestamp getDepartureTime() {
        return (Timestamp) getAttributeInternal(DEPARTURETIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartureTime.
     * @param value value to set the DepartureTime
     */
    public void setDepartureTime(Timestamp value) {
        setAttributeInternal(DEPARTURETIME, value);
    }

    /**
     * Gets the attribute value for StopHeadsign, using the alias name StopHeadsign.
     * @return the value of StopHeadsign
     */
    public String getStopHeadsign() {
        return (String) getAttributeInternal(STOPHEADSIGN);
    }

    /**
     * Sets <code>value</code> as the attribute value for StopHeadsign.
     * @param value value to set the StopHeadsign
     */
    public void setStopHeadsign(String value) {
        setAttributeInternal(STOPHEADSIGN, value);
    }

    /**
     * Gets the attribute value for PickupType, using the alias name PickupType.
     * @return the value of PickupType
     */
    public String getPickupType() {
        return (String) getAttributeInternal(PICKUPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PickupType.
     * @param value value to set the PickupType
     */
    public void setPickupType(String value) {
        setAttributeInternal(PICKUPTYPE, value);
    }

    /**
     * Gets the attribute value for ShapeDistTraveled, using the alias name ShapeDistTraveled.
     * @return the value of ShapeDistTraveled
     */
    public Integer getShapeDistTraveled() {
        return (Integer) getAttributeInternal(SHAPEDISTTRAVELED);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShapeDistTraveled.
     * @param value value to set the ShapeDistTraveled
     */
    public void setShapeDistTraveled(Integer value) {
        setAttributeInternal(SHAPEDISTTRAVELED, value);
    }

    /**
     * Gets the attribute value for Timepoint, using the alias name Timepoint.
     * @return the value of Timepoint
     */
    public String getTimepoint() {
        return (String) getAttributeInternal(TIMEPOINT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Timepoint.
     * @param value value to set the Timepoint
     */
    public void setTimepoint(String value) {
        setAttributeInternal(TIMEPOINT, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public TripsImpl getTrips() {
        return (TripsImpl) getAttributeInternal(TRIPS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTrips(TripsImpl value) {
        setAttributeInternal(TRIPS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getDrstati() {
        return (EntityImpl) getAttributeInternal(DRSTATI);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setDrstati(EntityImpl value) {
        setAttributeInternal(DRSTATI, value);
    }

    /**
     * @param tripId key constituent
     * @param decstat key constituent
     * @param stopSequence key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer tripId, String decstat, DBSequence stopSequence) {
        return new Key(new Object[] { tripId, decstat, stopSequence });
    }


}

