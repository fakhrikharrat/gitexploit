package com.soretrak.view;

import javax.faces.context.FacesContext;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;
import oracle.adf.view.rich.component.rich.RichPopup;
import oracle.adf.view.rich.event.DialogEvent;
import oracle.adf.view.rich.event.PopupCanceledEvent;
import oracle.adf.view.rich.event.PopupFetchEvent;

import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;

import org.apache.myfaces.trinidad.render.ExtendedRenderKitService;
import org.apache.myfaces.trinidad.util.Service;

public class Trips {
    

    public Trips() {
    }

    public void onDialogList(DialogEvent dialogEvent) {
        DialogEvent.Outcome outcome = dialogEvent.getOutcome();
        if (outcome == DialogEvent.Outcome.ok) {
            save();
            ExecuteTrip();
        } else
            cancel();
    }

    public void onPopupFetchList(PopupFetchEvent popupFetchEvent) {
        if (popupFetchEvent.getLaunchSourceClientId().contains("atrip")) {
            BindingContainer bindings = getBindings();
            OperationBinding operationBinding = bindings.getOperationBinding("CreateInsert");
            operationBinding.execute();

        }
    }

    public void onPopupCanceledList(PopupCanceledEvent popupCanceledEvent) {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Rollback");
        operationBinding.execute();

        operationBinding = bindings.getOperationBinding("Execute");
        operationBinding.execute();
    }

    public BindingContainer getBindings() {
        return BindingContext.getCurrent().getCurrentBindingsEntry();
    }

    public String save() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Commit");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        return null;
    }

    public String cancel() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Rollback");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        return null;
    }
    
    public String ExecuteTrip() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Execute");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        return null;
    }


    public void onPopupMapList(PopupFetchEvent popupFetchEvent) {
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("StopTimesView3Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        String ligne="";
        System.out.println("hello");
        while (iterator.hasNext()) {  
            row = iterator.next();           
            if ((row.getAttribute("StopLat")!= null) && ( row.getAttribute("StopLon")!=null))
                jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," +  "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        System.out.println(jsArray);
        // call javascript function with param
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        
        
        erks.addScript(fctx, "displayStationFromJson('" + jsArray +"','" + ligne + "')");
        
        
    }


    public String doDeleteTrip() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Delete");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        save();
        return null;
    }

    public String doDeleteStops() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Delete1");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        
        save();
        return null;
    }
}
