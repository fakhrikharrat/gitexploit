package com.soretrak.view;

import java.util.Map;

import oracle.adf.model.RegionContext;
import oracle.adf.model.RegionController;


import javax.faces.context.FacesContext;


import javax.faces.event.PhaseId;

import oracle.adf.model.BindingContext;
import oracle.adf.model.RegionBinding;


import oracle.adf.model.binding.DCBindingContainer;

import oracle.adfinternal.view.faces.bi.util.JsfUtils;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;

import org.apache.myfaces.trinidad.render.ExtendedRenderKitService;
import org.apache.myfaces.trinidad.util.Service;


public class SamplerMapController implements RegionController {
    public SamplerMapController() {
        super();
    }

    @Override
    public boolean refreshRegion(RegionContext regionContext) {
        int refreshFlag = regionContext.getRefreshFlag();
        //.
        if (refreshFlag == RegionBinding.PREPARE_MODEL) {
            this.initializeMethod();
        }
        //regionContext.getRegionBinding().refresh(refreshFlag);
        return false;


    }

    @Override
    public boolean validateRegion(RegionContext regionContext) {
        //regionContext.getRegionBinding().validate();
        return false;
    }

    @Override
    public boolean isRegionViewable(RegionContext regionContext) {
        //return regionContext.getRegionBinding().isViewable();
         return false;
    }

    @Override
    public String getName() {
        // TODO Implement this method
        return null;
    }


    public void initializeMethod() {

        RowSetIterator iterator =
            ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("StopTimesView3Iterator").getViewObject().createRowSetIterator(null);
        Row row = null;
        iterator.reset();
        String jsArray = "[";
        String ligne = "";
        String ic = "http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=2|FF0000|000000";
       
        while (iterator.hasNext()) {
            row = iterator.next();
            if ((row.getAttribute("StopLat") != null) && (row.getAttribute("StopLon") != null))
                jsArray +=
                    "{\"t\": \"" + row.getAttribute("Delstaa") + "\"," + "\"h\": \"" +
                    row.getAttribute("DepartureTime").toString().substring(11, 16) + "\"," + "\"l\": " +
                    row.getAttribute("StopLat") + "," + "\"g\": " + row.getAttribute("StopLon") + "},";
            ligne = (String) row.getAttribute("Denumli");
        }
        iterator.closeRowSetIterator();
        jsArray += "]";


        jsArray = jsArray.replace("},]", "}]");
        //System.out.println("initializeMethod :" +jsArray);
        // call javascript function with param


        //String language = JsfUtils.resolveExpression("#{pageFlowScope.language}").toString();
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        //erks.addScript(fctx, "initialize('"+ "fgf" +"');");
        //System.out.print("hello :" + ligne);


       // erks.addScript(fctx, "initialize('" + jsArray + "','" + ligne + "')");
        erks.addScript(fctx, "initialize('" + jsArray + "','" + ligne +  "')");
       
        
        
    }

}
