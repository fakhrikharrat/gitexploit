package com.soretrak.view;


import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;

import javax.faces.event.ValueChangeEvent;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;

import oracle.adf.view.rich.component.rich.input.RichInputText;

import oracle.adf.view.rich.component.rich.nav.RichButton;
import oracle.adf.view.rich.component.rich.output.RichOutputText;
import oracle.adf.view.rich.context.AdfFacesContext;
import oracle.adf.view.rich.event.PopupFetchEvent;

import oracle.binding.AttributeBinding;
import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;

import org.apache.myfaces.trinidad.event.SelectionEvent;
import org.apache.myfaces.trinidad.render.ExtendedRenderKitService;
import org.apache.myfaces.trinidad.util.ComponentReference;
import org.apache.myfaces.trinidad.util.Service;

public class JSClass {
    private RichInputText ligne;
   
   


    public JSClass() {
    }

   

   
    public String testeFinal() {
        BindingContainer bindings = getBindings();
        AttributeBinding denumli = (AttributeBinding) bindings.get("denumli");
        
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("DritinView2Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        while (iterator.hasNext()) {  
            row = iterator.next();           
            
            jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," +  "\"g\": " + row.getAttribute("StopLon") +"},";   
            
            //jsArray += "{t: "  + row.getAttribute("Delstaa")  + "," + "l: " + row.getAttribute("StopLat") +"," +  "g: " + row.getAttribute("StopLon") +"},";   
             
            //jsArray += "{\"t\": \\'"  + row.getAttribute("Delstaa")  + "\\'," + "\"l\": \\'" + row.getAttribute("StopLat") +"\\'," +  "\"g\": \\'" + row.getAttribute("StopLon") +"\\'},";   
            //jsArray += "{\"t\": \'"  + row.getAttribute("Delstaa")  + "\'," + "\"l\": \'" + row.getAttribute("StopLat") +"\'," +  "\"g\": \'" + row.getAttribute("StopLon") +"\'},";   
            
            
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        
        System.out.println(jsArray);
        
       
        
        
        
        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        // Invoke a java script method name called showConfPopup()' with two parameters, You can pass any value
       
        //erks.addScript(fctx, "displayStationDynamic('" + jsArray +  "')");
        
        
        erks.addScript(fctx, "initialize('" + jsArray + "','" + denumli.toString()+  "')");
        
        
        //erks.addScript(fctx, "gettable('" + "fakhri" +  "')");
        
        
        
        return null;
    }

    public String showLigneMap() {
        
               
        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        // Invoke a java script method name called showConfPopup()' with two parameters, You can pass any value
        
        //erks.addScript(fctx, "displayStationDynamic('" + jsArray +  "')");
        
        //erks.addScript(fctx, "showLigne('" + ligne.getValue().toString() +  "')");
        String line = "300";
        erks.addScript(fctx, "showLigne('" +line +  "')");
        return null;
    }

    public void setLigne(RichInputText ligne) {
        this.ligne = ligne;
    }

    public RichInputText getLigne() {
        return ligne;
    }

    public String fi() {
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("DritinView2Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        String ligne="";
        while (iterator.hasNext()) {  
            row = iterator.next();           
           
            jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," +  "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        
       // call javascript function with param 
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
       
        erks.addScript(fctx, "displayStationFromJson('" + jsArray +"','" + ligne + "')");
        
        
        
        //erks.addScript(fctx, "displayStationFromJson('" + jsArray +  "')");
       return null;
    }

    public String doDrawLigneStation() {
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("DritinView2Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        String ligne="";
        while (iterator.hasNext()) {  
            row = iterator.next();           
            if ((row.getAttribute("StopLat")!= null) && ( row.getAttribute("StopLon")!=null))
                jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," +  "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        
        // call javascript function with param
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        
        
        erks.addScript(fctx, "displayStationFromJson('" + jsArray +"','" + ligne + "')");
        
        
        return null;
    }

    public String doRemoveLigneStation() {
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("DritinView2Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
       
        String ligne="";
        while (iterator.hasNext()) {  
            row = iterator.next();           
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
    
     
        
        // call javascript function with param
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        
       
        erks.addScript(fctx, "removeStationFromJson('" + ligne + "')");
        
        
        return null;
    }

    

    public String displayData() {
        
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("StopTimesView3Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        String ligne="";
      
        while (iterator.hasNext()) {  
            row = iterator.next();           
            if ((row.getAttribute("StopLat")!= null) && ( row.getAttribute("StopLon")!=null))
                jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"h\": \"" + row.getAttribute("DepartureTime").toString().substring(11, 16)   + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," + "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        System.out.println("displayData : "+jsArray);
        // call javascript function with param

        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
       
        
        
        erks.addScript(fctx, "displayStationFromJson('" + jsArray +"','" + ligne + "')");
       
        return null;
    }

    public void tripsTableSelectionListener(SelectionEvent selectionEvent) {
        String jsArray="[";
        String ligne="";
        
        
        //"#{bindings.TripsView2.treeModel.makeCurrent}"
        ADFUtil.invokeEL("#{bindings.TripsView2.collectionModel.makeCurrent}", new Class[] {SelectionEvent.class},
                                new Object[] { selectionEvent });
        
        // get the selected row , by this you can get any attribute of that row
                Row selectedRow =
                    (Row)ADFUtil.evaluateEL("#{bindings.TripsView2Iterator.currentRow}"); // get the current selected row
        
        
        
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("StopTimesView3Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        
        
        while (iterator.hasNext()) {  
            row = iterator.next();           
            if ((row.getAttribute("StopLat")!= null) && ( row.getAttribute("StopLon")!=null))
                jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"h\": \"" + row.getAttribute("DepartureTime").toString().substring(11, 16)   + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," + "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        
        System.out.println("json :" + jsArray + " ligne :" +ligne );
        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        erks.addScript(fctx, "displayStationFromJson('" + jsArray +"','" + ligne + "')");

    
        
    }

    private void getJSONData(String jsArray, String ligne) {
        jsArray +="[";
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("StopTimesView3Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        
        
        while (iterator.hasNext()) {  
            row = iterator.next();           
            if ((row.getAttribute("StopLat")!= null) && ( row.getAttribute("StopLon")!=null))
                jsArray += "{\"t\": \""  + row.getAttribute("Delstaa")  + "\"," + "\"h\": \"" + row.getAttribute("DepartureTime").toString().substring(11, 16)   + "\"," + "\"l\": " + row.getAttribute("StopLat") +"," + "\"g\": " + row.getAttribute("StopLon") +"},";   
            ligne = (String) row.getAttribute("Denumli");
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        
    }

    public String DisplayGroupLines() {
        doListLineGrp();
        
        RowSetIterator iterator = ((DCBindingContainer) BindingContext.getCurrent().getCurrentBindingsEntry()).findIteratorBinding("ListLinesGrpView1Iterator").getViewObject().createRowSetIterator(null);  
        Row row = null;       
        iterator.reset();  
        String jsArray = "[";  
        String ligne="";
        
        while (iterator.hasNext()) {  
            row = iterator.next();           
            
            jsArray += "{\"ligne\": \""  + row.getAttribute("Denumli") +"\"},";  
            
        }  
        iterator.closeRowSetIterator();  
        jsArray += "]"; 
        
        
        jsArray =jsArray.replace("},]", "}]");
        System.out.println("displayData : "+jsArray);
        
        
        FacesContext fctx = FacesContext.getCurrentInstance();
        ExtendedRenderKitService erks = Service.getRenderKitService(fctx, ExtendedRenderKitService.class);
        erks.addScript(fctx, "displayGroupLinesFromJson('" + jsArray + "')");

        
        return null;
    }

    

    public BindingContainer getBindings() {
        return BindingContext.getCurrent().getCurrentBindingsEntry();
    }

    public String doListLineGrp() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ListLineGrp");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        return null;
    }


    
}
