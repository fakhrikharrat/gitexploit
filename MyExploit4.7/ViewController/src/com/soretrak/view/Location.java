package com.soretrak.view;

import oracle.adf.model.BindingContext;
import oracle.adf.view.rich.component.rich.data.RichColumn;
import oracle.adf.view.rich.component.rich.input.RichInputListOfValues;
import oracle.adf.view.rich.component.rich.input.RichInputText;
import oracle.adf.view.rich.component.rich.input.RichSelectOneChoice;
import oracle.adf.view.rich.component.rich.nav.RichButton;
import oracle.adf.view.rich.event.DialogEvent;

import oracle.binding.AttributeBinding;
import oracle.binding.BindingContainer;
import oracle.binding.OperationBinding;

public class Location {


   
    private RichColumn colVal;
    private RichButton badd;
    private RichButton bmodif;
    private RichInputText etat;
    private RichSelectOneChoice typePay;
    private RichInputListOfValues nummv;

    public Location() {
    }

    public void onDialogList(DialogEvent dialogEvent) {
        DialogEvent.Outcome outcome = dialogEvent.getOutcome();

        if (outcome == DialogEvent.Outcome.ok) {
            doUpdatEtatLoc();
            doExecute();
        }
    }

    public BindingContainer getBindings() {
        return BindingContext.getCurrent().getCurrentBindingsEntry();
    }


    @SuppressWarnings("unchecked")
    public String doUpdatEtatLoc() {
        if (controledata()) {
            String vetat = "I";
            BindingContainer bindings = getBindings();
            OperationBinding operationBinding = bindings.getOperationBinding("updateEtatLocation");
            switch (etat.getValue().toString()) {
            case "I":
                vetat = "V";
                break;
            case "V":
                vetat = "P";
                break;
            case "P":
                vetat = "E";
                break;
            case "E":
                vetat = "F";
                break;
            default:
                vetat = "F";
                break;
            }

            operationBinding.getParamsMap().put("value", vetat);
            System.out.println("etat : " + vetat);
            Object result = operationBinding.execute();
            if (!operationBinding.getErrors().isEmpty()) {
                return null;
            }
        }
        return null;
    }


    public String doExecute() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Execute");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }

        return null;
    }

    

    public String doListInit() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ExecuteWithParams");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        colVal.setRendered(true);

        badd.setVisible(true);
        bmodif.setVisible(true);
        return null;
    }

    public String doListValid() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ExecuteWithParams1");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }

        colVal.setRendered(false);
        badd.setVisible(false);
        bmodif.setVisible(false);
        return null;
    }

    public String doListPlanifier() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ExecuteWithParams2");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        colVal.setRendered(false);
        badd.setVisible(false);
        bmodif.setVisible(false);
        return null;
    }

    public String doListExec() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ExecuteWithParams3");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        colVal.setRendered(false);
        badd.setVisible(false);
        bmodif.setVisible(false);
        return null;
    }

    public String doListFact() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("ExecuteWithParams4");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }

        colVal.setRendered(false);
        badd.setVisible(false);
        bmodif.setVisible(false);
        return null;
    }

    public void setColVal(RichColumn colVal) {
        this.colVal = colVal;
    }

    public RichColumn getColVal() {
        return colVal;
    }

    public void setBadd(RichButton badd) {
        this.badd = badd;
    }

    public RichButton getBadd() {
        return badd;
    }

    public void setBmodif(RichButton bmodif) {
        this.bmodif = bmodif;
    }

    public RichButton getBmodif() {
        return bmodif;
    }

    public void setEtat(RichInputText etat) {
        this.etat = etat;
    }

    public RichInputText getEtat() {
        return etat;
    }

    private boolean controledata() {
        //BindingContainer bindings = getBindings();
       // AttributeBinding Denummv = (AttributeBinding) bindings.get("Denummv");
        
        if (typePay.getValue().toString().compareTo("T")==0)
            return true;
        else {
           // System.out.println("value :" +Denummv.getInputValue() + nummv.getValue());
            if ( nummv.getValue() == null) 
              return false;
            else
            return true;
           
        }
        
    }

    public void setTypePay(RichSelectOneChoice typePay) {
        this.typePay = typePay;
    }

    public RichSelectOneChoice getTypePay() {
        return typePay;
    }

    public void setNummv(RichInputListOfValues nummv) {
        this.nummv = nummv;
    }

    public RichInputListOfValues getNummv() {
        return nummv;
    }

    public String doSaveBack() {
        //update  montant theorique
        doUpdateMntTheo();
        
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("Commit");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        
        return "back";
    }

    public String doUpdateMntTheo() {
        BindingContainer bindings = getBindings();
        OperationBinding operationBinding = bindings.getOperationBinding("updateMntTheoLoc");
        Object result = operationBinding.execute();
        if (!operationBinding.getErrors().isEmpty()) {
            return null;
        }
        return null;
    }
}
