package com.soretrak.view.bean;

import java.util.Locale;

import javax.faces.application.ViewHandler;
import javax.faces.component.UIViewRoot;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletResponse;

public class LoginBean {
    private String lang ="fr";
    private boolean ar=false,fr=false,en=true;
    
    
    public String doArabic() {
                
        FacesContext fc = FacesContext.getCurrentInstance();
        lang = "ar";
        Locale local = new Locale(lang);
        fc.getViewRoot().setLocale(local);
        System.out.println( fc.getViewRoot().getLocale());
        
        setLang(lang);
        setFr(false);
        setAr(true);
        setEn(false);
        System.out.println(lang);
        
       
        
        /*ViewHandler vh = fc.getApplication().getViewHandler();
        String pageId = fc.getViewRoot().getViewId();
        UIViewRoot vr = vh.createView(fc, pageId);
        vr.setViewId(pageId);
        fc.setViewRoot(vr);
        
        
        HttpServletResponse response = (HttpServletResponse) fc.getExternalContext().getResponse();
        response.addHeader("Pragma", "no-cache");
        response.addHeader("Cache-Control", "no-cache");
        response.setHeader("Cache-Control", "no-store");
        response.addHeader("Cache-Control", "must-revalidate");        
        */
        return lang;
    }
    public String doFrensh() {
        FacesContext fc = FacesContext.getCurrentInstance();
        lang = "fr";
        Locale local = new Locale(lang);
        fc.getViewRoot().setLocale(local);
       
        System.out.println( fc.getViewRoot().getLocale());
        
        setLang(lang);
        setFr(true);
        setAr(false);
        setEn(false);
       
        System.out.println(lang);
        
       /* ViewHandler vh = fc.getApplication().getViewHandler();
        String pageId = fc.getViewRoot().getViewId();
        UIViewRoot vr = vh.createView(fc, pageId);
        vr.setViewId(pageId);
        fc.setViewRoot(vr);
        
        HttpServletResponse response = (HttpServletResponse) fc.getExternalContext().getResponse();
        response.addHeader("Pragma", "no-cache");
        response.addHeader("Cache-Control", "no-cache");
        response.setHeader("Cache-Control", "no-store");
        response.addHeader("Cache-Control", "must-revalidate");       */ 
        return lang;
    }
    
    
    public LoginBean() {
        super();

        
    }

    public void setLang(String lang) {
        this.lang = lang;
    }

    public String getLang() {
        return lang;
    }

    public void setAr(boolean ar) {
        this.ar = ar;
    }

    public boolean isAr() {
        return ar;
    }

    public void setFr(boolean fr) {
        this.fr = fr;
    }

    public boolean isFr() {
        return fr;
    }

    public void setEn(boolean en) {
        this.en = en;
    }

    public boolean isEn() {
        return en;
    }
    
    
    
}
